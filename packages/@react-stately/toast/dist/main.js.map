{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;ACoBA,KAAK,CAAC,mCAAa,GAAG,IAAI;SAEV,yCAAa,CAAC,KAAuB,EAAc,CAAC;IAClE,KAAK,EAAE,MAAM,EAAE,SAAS,IAAI,qBAAQ,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;IAC/D,KAAK,CAAC,SAAS,GAAG,mBAAM,CAAC,MAAM;IAC/B,SAAS,CAAC,OAAO,GAAG,MAAM;IAE1B,KAAK,CAAC,KAAK,IAAI,OAAkB,EAAE,OAAmB,GAAK,CAAC;QAC1D,GAAG,CAAC,UAAU,GAAG,CAAC;eAAG,MAAM;QAAA,CAAC;QAC5B,GAAG,CAAC,KAAK;QAET,EAA6B,AAA7B,2BAA6B;QAC7B,EAAE,IAAI,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,OAAO,KAAK,CAAC,GAAG,CAAC;YACpD,EAAE,EAAE,OAAO,CAAC,OAAO,GAAG,CAAC,EACrB,OAAO,CAAC,OAAO,GAAG,mCAAa;YAEjC,KAAK,GAAG,GAAG,CAAC,wCAAK,KAAO,QAAQ,CAAC,OAAO,CAAC,QAAQ;cAAG,OAAO,CAAC,OAAO,IAAI,mCAAa;QACtF,CAAC;QAED,UAAU,CAAC,IAAI,CAAC,CAAC;qBACf,OAAO;YACP,KAAK,EAAE,OAAO;mBACd,KAAK;QACP,CAAC;QACD,SAAS,CAAC,UAAU;IAGtB,CAAC;IAED,KAAK,CAAC,QAAQ,IAAI,QAAgB,GAAK,CAAC;QACtC,GAAG,CAAC,UAAU,GAAG,CAAC;eAAG,SAAS,CAAC,OAAO;QAAA,CAAC,CAAC,MAAM,EAAC,IAAI,GAAI,CAAC;YACtD,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,EAChD,IAAI,CAAC,KAAK,CAAC,KAAK;YAElB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,QAAQ;QACzC,CAAC;QACD,SAAS,CAAC,UAAU;IACtB,CAAC;IAED,MAAM,CAAC,CAAC;eACN,KAAK;kBACL,QAAQ;mBACR,SAAS;gBACT,MAAM;IACR,CAAC;AACH,CAAC;;;;;;SCrDe,wCAAK,CAAC,QAAoB,EAAE,KAAa,EAAE,CAAC;IAC1D,GAAG,CAAC,OAAO,EAAE,KAAK;IAClB,GAAG,CAAC,SAAS,GAAG,KAAK;IAErB,IAAI,CAAC,KAAK,OAAS,CAAC;QAClB,YAAY,CAAC,OAAO;QACpB,SAAS,IAAI,IAAI,CAAC,GAAG,KAAK,KAAK;IACjC,CAAC;IAED,IAAI,CAAC,MAAM,OAAS,CAAC;QACnB,KAAK,GAAG,IAAI,CAAC,GAAG;QAChB,OAAO,IAAI,YAAY,CAAC,OAAO;QAC/B,OAAO,GAAG,UAAU,CAAC,QAAQ,EAAE,SAAS;IAC1C,CAAC;IAED,IAAI,CAAC,KAAK,OAAS,CAAC;QAClB,YAAY,CAAC,OAAO;IACtB,CAAC;IAED,IAAI,CAAC,MAAM;AACb,CAAC;;","sources":["packages/@react-stately/toast/src/index.ts","packages/@react-stately/toast/src/useToastState.ts","packages/@react-stately/toast/src/timer.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useToastState';\nexport * from './timer';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ReactNode, useRef, useState} from 'react';\nimport {Timer} from './';\nimport {ToastProps, ToastState, ToastStateValue} from '@react-types/toast';\n\ninterface ToastStateProps {\n  value?: ToastStateValue[]\n}\n\nconst TOAST_TIMEOUT = 5000;\n\nexport function useToastState(props?: ToastStateProps): ToastState {\n  const [toasts, setToasts] = useState(props && props.value || []);\n  const toastsRef = useRef(toasts);\n  toastsRef.current = toasts;\n\n  const onAdd = (content: ReactNode, options: ToastProps) => {\n    let tempToasts = [...toasts];\n    let timer;\n\n    // set timer to remove toasts\n    if (!(options.actionLabel || options.timeout === 0)) {\n      if (options.timeout < 0) {\n        options.timeout = TOAST_TIMEOUT;\n      }\n      timer = new Timer(() => onRemove(options.toastKey), options.timeout || TOAST_TIMEOUT);\n    }\n\n    tempToasts.push({\n      content,\n      props: options,\n      timer\n    });\n    setToasts(tempToasts);\n\n\n  };\n\n  const onRemove = (toastKey: string) => {\n    let tempToasts = [...toastsRef.current].filter(item => {\n      if (item.props.toastKey === toastKey && item.timer) {\n        item.timer.clear();\n      }\n      return item.props.toastKey !== toastKey;\n    });\n    setToasts(tempToasts);\n  };\n\n  return {\n    onAdd,\n    onRemove,\n    setToasts,\n    toasts\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport function Timer(callback: () => void, delay: number) {\n  let timerId, start;\n  let remaining = delay;\n\n  this.pause = () => {\n    clearTimeout(timerId);\n    remaining -= Date.now() - start;\n  };\n\n  this.resume = () => {\n    start = Date.now();\n    timerId && clearTimeout(timerId);\n    timerId = setTimeout(callback, remaining);\n  };\n\n  this.clear = () => {\n    clearTimeout(timerId);\n  };\n\n  this.resume();\n}\n"],"names":[],"version":3,"file":"main.js.map"}