{"mappings":"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","sources":["packages/@react-stately/datepicker/src/index.ts","packages/@react-stately/datepicker/src/useDatePickerState.ts","packages/@react-stately/datepicker/src/utils.ts","packages/@react-stately/datepicker/src/useDatePickerFieldState.ts","packages/@react-stately/datepicker/src/useDateRangePickerState.ts","packages/@react-stately/datepicker/src/useTimeFieldState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useDatePickerState';\nexport * from './useDatePickerFieldState';\nexport * from './useDateRangePickerState';\nexport * from './useTimeFieldState';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CalendarDate, DateFormatter, toCalendarDateTime, toDateFields} from '@internationalized/date';\nimport {DatePickerProps, DateValue, Granularity, TimeValue} from '@react-types/datepicker';\nimport {FieldOptions, getFormatOptions, getPlaceholderTime, useDefaultProps} from './utils';\nimport {isInvalid} from './utils';\nimport {useControlledState} from '@react-stately/utils';\nimport {useState} from 'react';\nimport {ValidationState} from '@react-types/shared';\n\nexport interface DatePickerState {\n  value: DateValue,\n  setValue: (value: DateValue) => void,\n  dateValue: DateValue,\n  setDateValue: (value: CalendarDate) => void,\n  timeValue: TimeValue,\n  setTimeValue: (value: TimeValue) => void,\n  isOpen: boolean,\n  setOpen: (isOpen: boolean) => void,\n  validationState: ValidationState,\n  formatValue(locale: string, fieldOptions: FieldOptions): string,\n  granularity: Granularity\n}\n\nexport function useDatePickerState<T extends DateValue>(props: DatePickerProps<T>): DatePickerState {\n  let [isOpen, setOpen] = useState(false);\n  let [value, setValue] = useControlledState<DateValue>(props.value, props.defaultValue || null, props.onChange);\n\n  let v = (value || props.placeholderValue);\n  let [granularity, defaultTimeZone] = useDefaultProps(v, props.granularity);\n  let dateValue = value != null ? value.toDate(defaultTimeZone ?? 'UTC') : null;\n  let hasTime = granularity === 'hour' || granularity === 'minute' || granularity === 'second' || granularity === 'millisecond';\n\n  let [selectedDate, setSelectedDate] = useState<DateValue>(null);\n  let [selectedTime, setSelectedTime] = useState<TimeValue>(null);\n\n  if (value) {\n    selectedDate = value;\n    if ('hour' in value) {\n      selectedTime = value;\n    }\n  }\n\n  // props.granularity must actually exist in the value if one is provided.\n  if (v && !(granularity in v)) {\n    throw new Error('Invalid granularity ' + granularity + ' for value ' + v.toString());\n  }\n\n  let commitValue = (date: DateValue, time: TimeValue) => {\n    setValue('timeZone' in time ? time.set(toDateFields(date)) : toCalendarDateTime(date, time));\n  };\n\n  // Intercept setValue to make sure the Time section is not changed by date selection in Calendar\n  let selectDate = (newValue: CalendarDate) => {\n    if (hasTime) {\n      if (selectedTime) {\n        commitValue(newValue, selectedTime);\n      } else {\n        setSelectedDate(newValue);\n      }\n    } else {\n      setValue(newValue);\n    }\n\n    if (!hasTime) {\n      setOpen(false);\n    }\n  };\n\n  let selectTime = (newValue: TimeValue) => {\n    if (selectedDate) {\n      commitValue(selectedDate, newValue);\n    } else {\n      setSelectedTime(newValue);\n    }\n  };\n\n  let validationState: ValidationState = props.validationState ||\n    (isInvalid(value, props.minValue, props.maxValue) ? 'invalid' : null);\n\n  return {\n    value,\n    setValue,\n    dateValue: selectedDate,\n    timeValue: selectedTime,\n    setDateValue: selectDate,\n    setTimeValue: selectTime,\n    granularity,\n    isOpen,\n    setOpen(isOpen) {\n      // Commit the selected date when the calendar is closed. Use a placeholder time if one wasn't set.\n      // If only the time was set and not the date, don't commit. The state will be preserved until\n      // the user opens the popover again.\n      if (!isOpen && !value && selectedDate && hasTime) {\n        commitValue(selectedDate, selectedTime || getPlaceholderTime(props.placeholderValue));\n      }\n\n      setOpen(isOpen);\n    },\n    validationState,\n    formatValue(locale, fieldOptions) {\n      if (!dateValue) {\n        return '';\n      }\n\n      let formatOptions = getFormatOptions(fieldOptions, {\n        granularity,\n        timeZone: defaultTimeZone,\n        hideTimeZone: props.hideTimeZone,\n        hourCycle: props.hourCycle\n      });\n\n      let formatter = new DateFormatter(locale, formatOptions);\n      return formatter.format(dateValue);\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Calendar, now, Time, toCalendar, toCalendarDate, toCalendarDateTime} from '@internationalized/date';\nimport {DatePickerProps, DateValue, Granularity, TimeValue} from '@react-types/datepicker';\nimport {useRef} from 'react';\n\nexport function isInvalid(value: DateValue, minValue: DateValue, maxValue: DateValue) {\n  return value != null && (\n    (minValue != null && value.compare(minValue) < 0) ||\n    (maxValue != null && value.compare(maxValue) > 0)\n  );\n}\n\nexport type FieldOptions = Pick<Intl.DateTimeFormatOptions, 'year' | 'month' | 'day' | 'hour' | 'minute' | 'second'>;\ninterface FormatterOptions {\n  timeZone?: string,\n  hideTimeZone?: boolean,\n  granularity?: DatePickerProps<any>['granularity'],\n  maxGranularity?: 'year' | 'month' | DatePickerProps<any>['granularity'],\n  hourCycle?: 12 | 24\n}\n\nconst DEFAULT_FIELD_OPTIONS: FieldOptions = {\n  year: 'numeric',\n  month: 'numeric',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: '2-digit',\n  second: '2-digit'\n};\n\nexport function getFormatOptions(\n  fieldOptions: FieldOptions,\n  options: FormatterOptions\n): Intl.DateTimeFormatOptions {\n  fieldOptions = {...DEFAULT_FIELD_OPTIONS, ...fieldOptions};\n  let granularity = options.granularity || 'minute';\n  let keys = Object.keys(fieldOptions);\n  let startIdx = keys.indexOf(options.maxGranularity ?? 'year');\n  if (startIdx < 0) {\n    startIdx = 0;\n  }\n\n  let endIdx = keys.indexOf(granularity);\n  if (endIdx < 0) {\n    endIdx = 2;\n  }\n\n  if (startIdx > endIdx) {\n    throw new Error('maxGranularity must be greater than granularity');\n  }\n\n  let opts: Intl.DateTimeFormatOptions = keys.slice(startIdx, endIdx + 1).reduce((opts, key) => {\n    opts[key] = fieldOptions[key];\n    return opts;\n  }, {});\n\n  if (options.hourCycle != null) {\n    opts.hour12 = options.hourCycle === 12;\n  }\n\n  opts.timeZone = options.timeZone || 'UTC';\n\n  let hasTime = granularity === 'hour' || granularity === 'minute' || granularity === 'second';\n  if (hasTime && options.timeZone && !options.hideTimeZone) {\n    opts.timeZoneName = 'short';\n  }\n\n  return opts;\n}\n\nexport function getPlaceholderTime(placeholderValue: DateValue): TimeValue {\n  if (placeholderValue && 'hour' in placeholderValue) {\n    return placeholderValue;\n  }\n\n  return new Time();\n}\n\nexport function convertValue(value: DateValue, calendar: Calendar): DateValue {\n  if (value === null) {\n    return null;\n  }\n\n  if (!value) {\n    return undefined;\n  }\n\n  return toCalendar(value, calendar);\n}\n\n\nexport function createPlaceholderDate(placeholderValue: DateValue, granularity: string, calendar: Calendar, timeZone: string) {\n  if (placeholderValue) {\n    return convertValue(placeholderValue, calendar);\n  }\n\n  let date = toCalendar(now(timeZone).set({\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0\n  }), calendar);\n\n  if (granularity === 'year' || granularity === 'month' || granularity === 'day') {\n    return toCalendarDate(date);\n  }\n\n  if (!timeZone) {\n    return toCalendarDateTime(date);\n  }\n\n  return date;\n}\n\nexport function useDefaultProps(v: DateValue, granularity: Granularity): [Granularity, string] {\n  // Compute default granularity and time zone from the value. If the value becomes null, keep the last values.\n  let lastValue = useRef(v);\n  if (v) {\n    lastValue.current = v;\n  }\n\n  v = lastValue.current;\n  let defaultTimeZone = (v && 'timeZone' in v ? v.timeZone : undefined);\n  granularity = granularity || (v && 'minute' in v ? 'minute' : 'day');\n\n  // props.granularity must actually exist in the value if one is provided.\n  if (v && !(granularity in v)) {\n    throw new Error('Invalid granularity ' + granularity + ' for value ' + v.toString());\n  }\n\n  return [granularity, defaultTimeZone];\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Calendar, CalendarDateTime, DateFormatter, getMinimumDayInMonth, getMinimumMonthInYear, GregorianCalendar, toCalendar} from '@internationalized/date';\nimport {convertValue, createPlaceholderDate, FieldOptions, getFormatOptions, isInvalid, useDefaultProps} from './utils';\nimport {DatePickerProps, DateValue, Granularity} from '@react-types/datepicker';\nimport {useControlledState} from '@react-stately/utils';\nimport {useEffect, useMemo, useRef, useState} from 'react';\nimport {ValidationState} from '@react-types/shared';\n\nexport interface DateSegment {\n  type: Intl.DateTimeFormatPartTypes,\n  text: string,\n  value?: number,\n  minValue?: number,\n  maxValue?: number,\n  isPlaceholder: boolean,\n  isEditable: boolean\n}\n\nexport interface DatePickerFieldState {\n  value: DateValue,\n  dateValue: Date,\n  setValue: (value: CalendarDateTime) => void,\n  segments: DateSegment[],\n  dateFormatter: DateFormatter,\n  validationState: ValidationState,\n  granularity: Granularity,\n  increment: (type: Intl.DateTimeFormatPartTypes) => void,\n  decrement: (type: Intl.DateTimeFormatPartTypes) => void,\n  incrementPage: (type: Intl.DateTimeFormatPartTypes) => void,\n  decrementPage: (type: Intl.DateTimeFormatPartTypes) => void,\n  setSegment: (type: Intl.DateTimeFormatPartTypes, value: number) => void,\n  confirmPlaceholder: (type?: Intl.DateTimeFormatPartTypes) => void,\n  clearSegment: (type?: Intl.DateTimeFormatPartTypes) => void,\n  getFormatOptions(fieldOptions: FieldOptions): Intl.DateTimeFormatOptions\n}\n\nconst EDITABLE_SEGMENTS = {\n  year: true,\n  month: true,\n  day: true,\n  hour: true,\n  minute: true,\n  second: true,\n  dayPeriod: true,\n  era: true\n};\n\nconst PAGE_STEP = {\n  year: 5,\n  month: 2,\n  day: 7,\n  hour: 2,\n  minute: 15,\n  second: 15\n};\n\n// Node seems to convert everything to lowercase...\nconst TYPE_MAPPING = {\n  dayperiod: 'dayPeriod'\n};\n\ninterface DatePickerFieldProps<T extends DateValue> extends DatePickerProps<T> {\n  maxGranularity?: 'year' | 'month' | DatePickerProps<T>['granularity'],\n  locale: string,\n  createCalendar: (name: string) => Calendar\n}\n\nexport function useDatePickerFieldState<T extends DateValue>(props: DatePickerFieldProps<T>): DatePickerFieldState {\n  let {\n    locale,\n    createCalendar,\n    hideTimeZone\n  } = props;\n\n  let v: DateValue = (props.value || props.defaultValue || props.placeholderValue);\n  let [granularity, defaultTimeZone] = useDefaultProps(v, props.granularity);\n  let timeZone = defaultTimeZone || 'UTC';\n\n  // props.granularity must actually exist in the value if one is provided.\n  if (v && !(granularity in v)) {\n    throw new Error('Invalid granularity ' + granularity + ' for value ' + v.toString());\n  }\n\n  let formatOpts = useMemo(() => ({\n    granularity,\n    maxGranularity: props.maxGranularity ?? 'year',\n    timeZone: defaultTimeZone,\n    hideTimeZone,\n    hourCycle: props.hourCycle\n  }), [props.maxGranularity, granularity, props.hourCycle, defaultTimeZone, hideTimeZone]);\n  let opts = useMemo(() => getFormatOptions({}, formatOpts), [formatOpts]);\n\n  let dateFormatter = useMemo(() => new DateFormatter(locale, opts), [locale, opts]);\n  let resolvedOptions = useMemo(() => dateFormatter.resolvedOptions(), [dateFormatter]);\n  let calendar = useMemo(() => createCalendar(resolvedOptions.calendar), [createCalendar, resolvedOptions.calendar]);\n\n  // Determine how many editable segments there are for validation purposes.\n  // The result is cached for performance.\n  let allSegments = useMemo(() =>\n    dateFormatter.formatToParts(new Date())\n      .filter(seg => EDITABLE_SEGMENTS[seg.type])\n      .reduce((p, seg) => (p[seg.type] = true, p), {})\n  , [dateFormatter]);\n\n  let [validSegments, setValidSegments] = useState<Partial<typeof EDITABLE_SEGMENTS>>(\n    () => props.value || props.defaultValue ? {...allSegments} : {}\n  );\n\n  // We keep track of the placeholder date separately in state so that onChange is not called\n  // until all segments are set. If the value === null (not undefined), then assume the component\n  // is controlled, so use the placeholder as the value until all segments are entered so it doesn't\n  // change from uncontrolled to controlled and emit a warning.\n  let [placeholderDate, setPlaceholderDate] = useState(\n    () => createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone)\n  );\n\n  // Reset placeholder when calendar changes\n  let lastCalendarIdentifier = useRef(calendar.identifier);\n  useEffect(() => {\n    if (calendar.identifier !== lastCalendarIdentifier.current) {\n      lastCalendarIdentifier.current = calendar.identifier;\n      setPlaceholderDate(placeholder =>\n        Object.keys(validSegments).length > 0\n          ? toCalendar(placeholder, calendar)\n          : createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone)\n      );\n    }\n  }, [calendar, granularity, validSegments, defaultTimeZone, props.placeholderValue]);\n\n  let [value, setDate] = useControlledState<DateValue>(\n    props.value,\n    props.defaultValue,\n    props.onChange\n  );\n\n  let calendarValue = useMemo(() => convertValue(value, calendar), [value, calendar]);\n\n  // If there is a value prop, and some segments were previously placeholders, mark them all as valid.\n  if (value && Object.keys(validSegments).length < Object.keys(allSegments).length) {\n    validSegments = {...allSegments};\n    setValidSegments(validSegments);\n  }\n\n  // If the value is set to null and all segments are valid, reset the placeholder.\n  if (value == null && Object.keys(validSegments).length === Object.keys(allSegments).length) {\n    validSegments = {};\n    setValidSegments(validSegments);\n    setPlaceholderDate(createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone));\n  }\n\n  // If all segments are valid, use the date from state, otherwise use the placeholder date.\n  let displayValue = calendarValue && Object.keys(validSegments).length >= Object.keys(allSegments).length ? calendarValue : placeholderDate;\n  let setValue = (newValue: DateValue) => {\n    if (props.isDisabled || props.isReadOnly) {\n      return;\n    }\n\n    if (Object.keys(validSegments).length >= Object.keys(allSegments).length) {\n      // The display calendar should not have any effect on the emitted value.\n      // Emit dates in the same calendar as the original value, if any, otherwise gregorian.\n      newValue = toCalendar(newValue, v?.calendar || new GregorianCalendar());\n      setDate(newValue);\n    } else {\n      setPlaceholderDate(newValue);\n    }\n  };\n\n  let dateValue = useMemo(() => displayValue.toDate(timeZone), [displayValue, timeZone]);\n  let segments = useMemo(() =>\n    dateFormatter.formatToParts(dateValue)\n      .map(segment => {\n        let isEditable = EDITABLE_SEGMENTS[segment.type];\n        if (segment.type === 'era' && calendar.getEras().length === 1) {\n          isEditable = false;\n        }\n\n        return {\n          type: TYPE_MAPPING[segment.type] || segment.type,\n          text: segment.value,\n          ...getSegmentLimits(displayValue, segment.type, resolvedOptions),\n          isPlaceholder: EDITABLE_SEGMENTS[segment.type] && !validSegments[segment.type],\n          isEditable\n        } as DateSegment;\n      })\n  , [dateValue, validSegments, dateFormatter, resolvedOptions, displayValue, calendar]);\n\n  let hasEra = useMemo(() => segments.some(s => s.type === 'era'), [segments]);\n\n  let markValid = (part: Intl.DateTimeFormatPartTypes) => {\n    validSegments[part] = true;\n    if (part === 'year' && hasEra) {\n      validSegments.era = true;\n    }\n    setValidSegments({...validSegments});\n  };\n\n  let adjustSegment = (type: Intl.DateTimeFormatPartTypes, amount: number) => {\n    markValid(type);\n    setValue(addSegment(displayValue, type, amount, resolvedOptions));\n  };\n\n  let validationState: ValidationState = props.validationState ||\n    (isInvalid(calendarValue, props.minValue, props.maxValue) ? 'invalid' : null);\n\n  return {\n    value: calendarValue,\n    dateValue,\n    setValue,\n    segments,\n    dateFormatter,\n    validationState,\n    granularity,\n    increment(part) {\n      adjustSegment(part, 1);\n    },\n    decrement(part) {\n      adjustSegment(part, -1);\n    },\n    incrementPage(part) {\n      adjustSegment(part, PAGE_STEP[part] || 1);\n    },\n    decrementPage(part) {\n      adjustSegment(part, -(PAGE_STEP[part] || 1));\n    },\n    setSegment(part, v) {\n      markValid(part);\n      setValue(setSegment(displayValue, part, v, resolvedOptions));\n    },\n    confirmPlaceholder(part) {\n      if (props.isDisabled || props.isReadOnly) {\n        return;\n      }\n\n      if (!part) {\n        // Confirm the rest of the placeholder if any of the segments are valid.\n        let numValid = Object.keys(validSegments).length;\n        if (numValid > 0 && numValid < Object.keys(allSegments).length) {\n          validSegments = {...allSegments};\n          setValidSegments(validSegments);\n          setValue(displayValue.copy());\n        }\n      } else if (!validSegments[part]) {\n        markValid(part);\n        setValue(displayValue.copy());\n      }\n    },\n    clearSegment(part) {\n      delete validSegments[part];\n      setValidSegments({...validSegments});\n\n      let placeholder = createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone);\n      let value = displayValue;\n\n      // Reset day period to default without changing the hour.\n      if (part === 'dayPeriod' && 'hour' in displayValue && 'hour' in placeholder) {\n        let isPM = displayValue.hour >= 12;\n        let shouldBePM = placeholder.hour >= 12;\n        if (isPM && !shouldBePM) {\n          value = displayValue.set({hour: displayValue.hour - 12});\n        } else if (!isPM && shouldBePM) {\n          value = displayValue.set({hour: displayValue.hour + 12});\n        }\n      } else if (part in displayValue) {\n        value = displayValue.set({[part]: placeholder[part]});\n      }\n\n      setDate(null);\n      setValue(value);\n    },\n    getFormatOptions(fieldOptions: FieldOptions) {\n      return getFormatOptions(fieldOptions, formatOpts);\n    }\n  };\n}\n\nfunction getSegmentLimits(date: DateValue, type: string, options: Intl.ResolvedDateTimeFormatOptions) {\n  switch (type) {\n    case 'era': {\n      let eras = date.calendar.getEras();\n      return {\n        value: eras.indexOf(date.era),\n        minValue: 0,\n        maxValue: eras.length - 1\n      };\n    }\n    case 'year':\n      return {\n        value: date.year,\n        minValue: 1,\n        maxValue: date.calendar.getYearsInEra(date)\n      };\n    case 'month':\n      return {\n        value: date.month,\n        minValue: getMinimumMonthInYear(date),\n        maxValue: date.calendar.getMonthsInYear(date)\n      };\n    case 'day':\n      return {\n        value: date.day,\n        minValue: getMinimumDayInMonth(date),\n        maxValue: date.calendar.getDaysInMonth(date)\n      };\n  }\n\n  if ('hour' in date) {\n    switch (type) {\n      case 'dayPeriod':\n        return {\n          value: date.hour >= 12 ? 12 : 0,\n          minValue: 0,\n          maxValue: 12\n        };\n      case 'hour':\n        if (options.hour12) {\n          let isPM = date.hour >= 12;\n          return {\n            value: date.hour,\n            minValue: isPM ? 12 : 0,\n            maxValue: isPM ? 23 : 11\n          };\n        }\n\n        return {\n          value: date.hour,\n          minValue: 0,\n          maxValue: 23\n        };\n      case 'minute':\n        return {\n          value: date.minute,\n          minValue: 0,\n          maxValue: 59\n        };\n      case 'second':\n        return {\n          value: date.second,\n          minValue: 0,\n          maxValue: 59\n        };\n    }\n  }\n\n  return {};\n}\n\nfunction addSegment(value: DateValue, part: string, amount: number, options: Intl.ResolvedDateTimeFormatOptions) {\n  switch (part) {\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day':\n      return value.cycle(part, amount, {round: part === 'year'});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        let hours = value.hour;\n        let isPM = hours >= 12;\n        return value.set({hour: isPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n      case 'minute':\n      case 'second':\n        return value.cycle(part, amount, {\n          round: part !== 'hour',\n          hourCycle: options.hour12 ? 12 : 24\n        });\n    }\n  }\n}\n\nfunction setSegment(value: DateValue, part: string, segmentValue: number, options: Intl.ResolvedDateTimeFormatOptions) {\n  switch (part) {\n    case 'day':\n    case 'month':\n    case 'year':\n      return value.set({[part]: segmentValue});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        let hours = value.hour;\n        let wasPM = hours >= 12;\n        let isPM = segmentValue >= 12;\n        if (isPM === wasPM) {\n          return value;\n        }\n        return value.set({hour: wasPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n        // In 12 hour time, ensure that AM/PM does not change\n        if (options.hour12) {\n          let hours = value.hour;\n          let wasPM = hours >= 12;\n          if (!wasPM && segmentValue === 12) {\n            segmentValue = 0;\n          }\n          if (wasPM && segmentValue < 12) {\n            segmentValue += 12;\n          }\n        }\n        // fallthrough\n      case 'minute':\n      case 'second':\n        return value.set({[part]: segmentValue});\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createPlaceholderDate, FieldOptions, getFormatOptions, getPlaceholderTime, isInvalid, useDefaultProps} from './utils';\nimport {DateFormatter, toCalendarDateTime, toDateFields} from '@internationalized/date';\nimport {DateRange, DateRangePickerProps, DateValue, Granularity, TimeValue} from '@react-types/datepicker';\nimport {RangeValue, ValidationState} from '@react-types/shared';\nimport {useControlledState} from '@react-stately/utils';\nimport {useRef, useState} from 'react';\n\ntype TimeRange = RangeValue<TimeValue>;\nexport interface DateRangePickerState {\n  value: DateRange,\n  setValue: (value: DateRange) => void,\n  setDate: (part: keyof DateRange, value: DateValue) => void,\n  setTime: (part: keyof TimeRange, value: TimeValue) => void,\n  setDateTime: (part: keyof DateRange, value: DateValue) => void,\n  dateRange: DateRange,\n  setDateRange: (value: DateRange) => void,\n  timeRange: TimeRange,\n  setTimeRange: (value: TimeRange) => void,\n  isOpen: boolean,\n  setOpen: (isOpen: boolean) => void,\n  validationState: ValidationState,\n  formatValue(locale: string, fieldOptions: FieldOptions): string,\n  confirmPlaceholder(): void,\n  granularity: Granularity\n}\n\nexport function useDateRangePickerState<T extends DateValue>(props: DateRangePickerProps<T>): DateRangePickerState {\n  let [isOpen, setOpen] = useState(false);\n  let [controlledValue, setControlledValue] = useControlledState<DateRange>(props.value, props.defaultValue || null, props.onChange);\n  let [placeholderValue, setPlaceholderValue] = useState(() => controlledValue || {start: null, end: null});\n\n  // Reset the placeholder if the value prop is set to null.\n  if (controlledValue == null && placeholderValue.start && placeholderValue.end) {\n    placeholderValue = {start: null, end: null};\n    setPlaceholderValue(placeholderValue);\n  }\n\n  let value = controlledValue || placeholderValue;\n  let valueRef = useRef(value);\n  valueRef.current = value;\n\n  let setValue = (value: DateRange) => {\n    valueRef.current = value;\n    setPlaceholderValue(value);\n    if (value?.start && value.end) {\n      setControlledValue(value);\n    } else {\n      setControlledValue(null);\n    }\n  };\n\n  let v = (value?.start || value?.end || props.placeholderValue);\n  let [granularity, defaultTimeZone] = useDefaultProps(v, props.granularity);\n  let hasTime = granularity === 'hour' || granularity === 'minute' || granularity === 'second' || granularity === 'millisecond';\n\n  let [dateRange, setSelectedDateRange] = useState<DateRange>(null);\n  let [timeRange, setSelectedTimeRange] = useState<TimeRange>(null);\n\n  if (value && value.start && value.end) {\n    dateRange = value;\n    if ('hour' in value.start) {\n      timeRange = value as TimeRange;\n    }\n  }\n\n  let commitValue = (dateRange: DateRange, timeRange: TimeRange) => {\n    setValue({\n      start: 'timeZone' in timeRange.start ? timeRange.start.set(toDateFields(dateRange.start)) : toCalendarDateTime(dateRange.start, timeRange.start),\n      end: 'timeZone' in timeRange.end ? timeRange.end.set(toDateFields(dateRange.end)) : toCalendarDateTime(dateRange.end, timeRange.end)\n    });\n  };\n\n  // Intercept setValue to make sure the Time section is not changed by date selection in Calendar\n  let setDateRange = (range: DateRange) => {\n    if (hasTime) {\n      if (range.start && range.end && timeRange?.start && timeRange?.end) {\n        commitValue(range, timeRange);\n      } else {\n        setSelectedDateRange(range);\n      }\n    } else if (range.start && range.end) {\n      setValue(range);\n    } else {\n      setSelectedDateRange(range);\n    }\n\n    if (!hasTime) {\n      setOpen(false);\n    }\n  };\n\n  let setTimeRange = (range: TimeRange) => {\n    if (dateRange?.start && dateRange?.end && range.start && range.end) {\n      commitValue(dateRange, range);\n    } else {\n      setSelectedTimeRange(range);\n    }\n  };\n\n  let validationState: ValidationState = props.validationState\n    || (value != null && (\n      isInvalid(value.start, props.minValue, props.maxValue) ||\n      isInvalid(value.end, props.minValue, props.maxValue) ||\n      (value.end != null && value.start != null && value.end.compare(value.start) < 0)\n    ) ? 'invalid' : null);\n\n  return {\n    value,\n    setValue,\n    dateRange,\n    timeRange,\n    granularity,\n    setDate(part, date) {\n      setDateRange({...dateRange, [part]: date});\n    },\n    setTime(part, time) {\n      setTimeRange({...timeRange, [part]: time});\n    },\n    setDateTime(part, dateTime) {\n      setValue({...value, [part]: dateTime});\n    },\n    setDateRange,\n    setTimeRange,\n    isOpen,\n    setOpen(isOpen) {\n      // Commit the selected date range when the calendar is closed. Use a placeholder time if one wasn't set.\n      // If only the time range was set and not the date range, don't commit. The state will be preserved until\n      // the user opens the popover again.\n      if (!isOpen && !(value?.start && value?.end) && dateRange?.start && dateRange?.end && hasTime) {\n        commitValue(dateRange, {\n          start: timeRange?.start || getPlaceholderTime(props.placeholderValue),\n          end: timeRange?.end || getPlaceholderTime(props.placeholderValue)\n        });\n      }\n\n      setOpen(isOpen);\n    },\n    validationState,\n    formatValue(locale, fieldOptions) {\n      if (!value || !value.start || !value.end) {\n        return '';\n      }\n\n      let startTimeZone = 'timeZone' in value.start ? value.start.timeZone : undefined;\n      let startGranularity = props.granularity || (value.start && 'minute' in value.start ? 'minute' : 'day');\n      let endTimeZone = 'timeZone' in value.end ? value.end.timeZone : undefined;\n      let endGranularity = props.granularity || (value.end && 'minute' in value.end ? 'minute' : 'day');\n\n      let startOptions = getFormatOptions(fieldOptions, {\n        granularity: startGranularity,\n        timeZone: startTimeZone,\n        hideTimeZone: props.hideTimeZone,\n        hourCycle: props.hourCycle\n      });\n\n      let startFormatter = new DateFormatter(locale, startOptions);\n      let endFormatter: Intl.DateTimeFormat;\n      if (startTimeZone === endTimeZone && startGranularity === endGranularity) {\n        // Use formatRange, as it results in shorter output when some of the fields\n        // are shared between the start and end dates (e.g. the same month).\n        // Formatting will fail if the end date is before the start date. Fall back below when that happens.\n        try {\n          return startFormatter.formatRange(value.start.toDate(startTimeZone), value.end.toDate(endTimeZone));\n        } catch (e) {\n          // ignore\n        }\n\n        endFormatter = startFormatter;\n      } else {\n        let endOptions = getFormatOptions(fieldOptions, {\n          granularity: endGranularity,\n          timeZone: endTimeZone,\n          hideTimeZone: props.hideTimeZone,\n          hourCycle: props.hourCycle\n        });\n\n        endFormatter = new DateFormatter(locale, endOptions);\n      }\n\n      return `${startFormatter.format(value.start.toDate(startTimeZone))} – ${endFormatter.format(value.end.toDate(endTimeZone))}`;\n    },\n    confirmPlaceholder() {\n      // Need to use ref value here because the value can be set in the same tick as\n      // a blur, which means the component won't have re-rendered yet.\n      let value = valueRef.current;\n      if (value && Boolean(value.start) !== Boolean(value.end)) {\n        let calendar = (value.start || value.end).calendar;\n        let placeholder = createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone);\n        setValue({\n          start: value.start || placeholder,\n          end: value.end || placeholder\n        });\n      }\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Calendar, getLocalTimeZone, Time, toCalendarDateTime, today, toTime} from '@internationalized/date';\nimport {DateValue, TimePickerProps, TimeValue} from '@react-types/datepicker';\nimport {useControlledState} from '@react-stately/utils';\nimport {useDatePickerFieldState} from '.';\nimport {useMemo} from 'react';\n\ninterface TimeFieldProps<T extends TimeValue> extends TimePickerProps<T> {\n  locale: string,\n  createCalendar: (name: string) => Calendar\n}\n\nexport function useTimeFieldState<T extends TimeValue>(props: TimeFieldProps<T>) {\n  let {\n    placeholderValue = new Time(),\n    minValue,\n    maxValue,\n    granularity\n  } = props;\n\n  let [value, setValue] = useControlledState<TimeValue>(\n    props.value,\n    props.defaultValue,\n    props.onChange\n  );\n\n  let v = value || placeholderValue;\n  let day = v && 'day' in v ? v : undefined;\n  let placeholderDate = useMemo(() => convertValue(placeholderValue), [placeholderValue]);\n  let minDate = useMemo(() => convertValue(minValue, day), [minValue, day]);\n  let maxDate = useMemo(() => convertValue(maxValue, day), [maxValue, day]);\n\n  let dateTime = useMemo(() => value == null ? null : convertValue(value), [value]);\n  let onChange = newValue => {\n    setValue(v && 'day' in v ? newValue : newValue && toTime(newValue));\n  };\n\n  return useDatePickerFieldState({\n    ...props,\n    value: dateTime,\n    defaultValue: undefined,\n    minValue: minDate,\n    maxValue: maxDate,\n    onChange,\n    granularity: granularity || 'minute',\n    maxGranularity: 'hour',\n    placeholderValue: placeholderDate\n  });\n}\n\nfunction convertValue(value: TimeValue, date: DateValue = today(getLocalTimeZone())) {\n  if (!value) {\n    return null;\n  }\n\n  if ('day' in value) {\n    return value;\n  }\n\n  return toCalendarDateTime(date, value);\n}\n"],"names":[],"version":3,"file":"main.js.map"}