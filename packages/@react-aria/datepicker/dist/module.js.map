{"mappings":"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","sources":["packages/@react-aria/datepicker/src/index.ts","packages/@react-aria/datepicker/src/useDatePicker.ts","packages/@react-aria/datepicker/intl/*.js","packages/@react-aria/datepicker/intl/ar-AE.json","packages/@react-aria/datepicker/intl/bg-BG.json","packages/@react-aria/datepicker/intl/cs-CZ.json","packages/@react-aria/datepicker/intl/da-DK.json","packages/@react-aria/datepicker/intl/de-DE.json","packages/@react-aria/datepicker/intl/el-GR.json","packages/@react-aria/datepicker/intl/en-US.json","packages/@react-aria/datepicker/intl/es-ES.json","packages/@react-aria/datepicker/intl/et-EE.json","packages/@react-aria/datepicker/intl/fi-FI.json","packages/@react-aria/datepicker/intl/fr-FR.json","packages/@react-aria/datepicker/intl/he-IL.json","packages/@react-aria/datepicker/intl/hr-HR.json","packages/@react-aria/datepicker/intl/hu-HU.json","packages/@react-aria/datepicker/intl/it-IT.json","packages/@react-aria/datepicker/intl/ja-JP.json","packages/@react-aria/datepicker/intl/ko-KR.json","packages/@react-aria/datepicker/intl/lt-LT.json","packages/@react-aria/datepicker/intl/lv-LV.json","packages/@react-aria/datepicker/intl/nb-NO.json","packages/@react-aria/datepicker/intl/nl-NL.json","packages/@react-aria/datepicker/intl/pl-PL.json","packages/@react-aria/datepicker/intl/pt-BR.json","packages/@react-aria/datepicker/intl/pt-PT.json","packages/@react-aria/datepicker/intl/ro-RO.json","packages/@react-aria/datepicker/intl/ru-RU.json","packages/@react-aria/datepicker/intl/sk-SK.json","packages/@react-aria/datepicker/intl/sl-SI.json","packages/@react-aria/datepicker/intl/sr-SP.json","packages/@react-aria/datepicker/intl/sv-SE.json","packages/@react-aria/datepicker/intl/tr-TR.json","packages/@react-aria/datepicker/intl/uk-UA.json","packages/@react-aria/datepicker/intl/zh-CN.json","packages/@react-aria/datepicker/intl/zh-TW.json","packages/@react-aria/datepicker/src/useDatePickerGroup.ts","packages/@react-aria/datepicker/src/useDateSegment.ts","packages/@react-aria/datepicker/src/useDateField.ts","packages/@react-aria/datepicker/src/useDisplayNames.ts","packages/@react-aria/datepicker/src/useDateRangePicker.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useDatePicker';\nexport * from './useDateSegment';\nexport * from './useDateField';\nexport * from './useDateRangePicker';\nexport * from './useDisplayNames';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {AriaDatePickerProps, DateValue} from '@react-types/datepicker';\nimport {AriaDialogProps} from '@react-types/dialog';\nimport {createFocusManager} from '@react-aria/focus';\nimport {DatePickerState} from '@react-stately/datepicker';\nimport {HTMLAttributes, LabelHTMLAttributes, RefObject} from 'react';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {mergeProps, useDescription, useId} from '@react-aria/utils';\nimport {useDatePickerGroup} from './useDatePickerGroup';\nimport {useField} from '@react-aria/label';\nimport {useLocale, useMessageFormatter} from '@react-aria/i18n';\n\ninterface DatePickerAria<T extends DateValue> {\n  groupProps: HTMLAttributes<HTMLElement>,\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  fieldProps: AriaDatePickerProps<T>,\n  /** Props for the description element, if any. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n  /** Props for the error message element, if any. */\n  errorMessageProps: HTMLAttributes<HTMLElement>,\n  buttonProps: AriaButtonProps,\n  dialogProps: AriaDialogProps\n}\n\nexport function useDatePicker<T extends DateValue>(props: AriaDatePickerProps<T>, state: DatePickerState, ref: RefObject<HTMLElement>): DatePickerAria<T> {\n  let buttonId = useId();\n  let dialogId = useId();\n  let formatMessage = useMessageFormatter(intlMessages);\n\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    labelElementType: 'span'\n  });\n\n  let groupProps = useDatePickerGroup(state, ref);\n\n  let labelledBy = fieldProps['aria-labelledby'] || fieldProps.id;\n\n  let {locale} = useLocale();\n  let descProps = useDescription(state.formatValue(locale, {month: 'long'}));\n  let ariaDescribedBy = [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n\n  return {\n    groupProps: mergeProps(groupProps, descProps, {\n      role: 'group',\n      'aria-disabled': props.isDisabled || null,\n      'aria-labelledby': labelledBy,\n      'aria-describedby': ariaDescribedBy\n    }),\n    labelProps: {\n      ...labelProps,\n      onClick: () => {\n        let focusManager = createFocusManager(ref);\n        focusManager.focusFirst();\n      }\n    },\n    fieldProps,\n    descriptionProps,\n    errorMessageProps,\n    buttonProps: {\n      ...descProps,\n      id: buttonId,\n      excludeFromTabOrder: true,\n      'aria-haspopup': 'dialog',\n      'aria-label': formatMessage('calendar'),\n      'aria-labelledby': `${labelledBy} ${buttonId}`,\n      'aria-describedby': ariaDescribedBy\n    },\n    dialogProps: {\n      id: dialogId,\n      'aria-labelledby': `${labelledBy} ${buttonId}`\n    }\n  };\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","{\n  \"calendar\": \"التقويم\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} إلى {end, date, long}\",\n  \"date\": \"التاريخ\",\n  \"dateRange\": \"نطاق التاريخ\",\n  \"day\": \"يوم\",\n  \"dayPeriod\": \"ص/م\",\n  \"endDate\": \"تاريخ الانتهاء\",\n  \"era\": \"العصر\",\n  \"hour\": \"الساعات\",\n  \"minute\": \"الدقائق\",\n  \"month\": \"الشهر\",\n  \"second\": \"الثواني\",\n  \"startDate\": \"تاريخ البدء\",\n  \"year\": \"السنة\",\n  \"weekday\": \"اليوم\",\n  \"timeZoneName\": \"التوقيت\"\n}\n","{\n  \"calendar\": \"Календар\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} до {end, date, long}\",\n  \"date\": \"Дата\",\n  \"dateRange\": \"Времеви интервал\",\n  \"day\": \"ден\",\n  \"dayPeriod\": \"пр.об./сл.об.\",\n  \"endDate\": \"Крайна дата\",\n  \"era\": \"ера\",\n  \"hour\": \"час\",\n  \"minute\": \"минута\",\n  \"month\": \"месец\",\n  \"second\": \"секунда\",\n  \"startDate\": \"Начална дата\",\n  \"year\": \"година\",\n  \"weekday\": \"ден от седмицата\",\n  \"timeZoneName\": \"часова зона\"\n}\n","{\n  \"calendar\": \"Kalendář\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} až {end, date, long}\",\n  \"date\": \"Datum\",\n  \"dateRange\": \"Rozsah dat\",\n  \"day\": \"den\",\n  \"dayPeriod\": \"část dne\",\n  \"endDate\": \"Konečné datum\",\n  \"era\": \"letopočet\",\n  \"hour\": \"hodina\",\n  \"minute\": \"minuta\",\n  \"month\": \"měsíc\",\n  \"second\": \"sekunda\",\n  \"startDate\": \"Počáteční datum\",\n  \"year\": \"rok\",\n  \"weekday\": \"den v týdnu\",\n  \"timeZoneName\": \"časové pásmo\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} til {end, date, long}\",\n  \"date\": \"Dato\",\n  \"dateRange\": \"Datointerval\",\n  \"day\": \"dag\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Slutdato\",\n  \"era\": \"æra\",\n  \"hour\": \"time\",\n  \"minute\": \"minut\",\n  \"month\": \"måned\",\n  \"second\": \"sekund\",\n  \"startDate\": \"Startdato\",\n  \"year\": \"år\",\n  \"weekday\": \"ugedag\",\n  \"timeZoneName\": \"tidszone\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} bis {end, date, long}\",\n  \"date\": \"Datum\",\n  \"dateRange\": \"Datumsbereich\",\n  \"day\": \"Tag\",\n  \"dayPeriod\": \"Tageshälfte\",\n  \"endDate\": \"Enddatum\",\n  \"era\": \"Epoche\",\n  \"hour\": \"Stunde\",\n  \"minute\": \"Minute\",\n  \"month\": \"Monat\",\n  \"second\": \"Sekunde\",\n  \"startDate\": \"Anfangsdatum\",\n  \"year\": \"Jahr\",\n  \"weekday\": \"Wochentag\",\n  \"timeZoneName\": \"Zeitzone\"\n}\n","{\n  \"calendar\": \"Ημερολόγιο\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} ως {end, date, long}\",\n  \"date\": \"Ημερομηνία\",\n  \"dateRange\": \"Εύρος ημερομηνιών\",\n  \"day\": \"ημέρα\",\n  \"dayPeriod\": \"π.μ./μ.μ.\",\n  \"endDate\": \"Ημερομηνία λήξης\",\n  \"era\": \"περίοδος\",\n  \"hour\": \"ώρα\",\n  \"minute\": \"λεπτό\",\n  \"month\": \"μήνας\",\n  \"second\": \"δευτερόλεπτο\",\n  \"startDate\": \"Ημερομηνία έναρξης\",\n  \"year\": \"έτος\",\n  \"weekday\": \"καθημερινή\",\n  \"timeZoneName\": \"ζώνη ώρας\"\n}\n","{\n  \"era\": \"era\",\n  \"year\": \"year\",\n  \"month\": \"month\",\n  \"day\": \"day\",\n  \"hour\": \"hour\",\n  \"minute\": \"minute\",\n  \"second\": \"second\",\n  \"dayPeriod\": \"AM/PM\",\n  \"calendar\": \"Calendar\",\n  \"date\": \"Date\",\n  \"dateRange\": \"Date Range\",\n  \"startDate\": \"Start Date\",\n  \"endDate\": \"End Date\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} to {end, date, long}\",\n  \"weekday\": \"day of the week\",\n  \"timeZoneName\": \"time zone\"\n}\n","{\n  \"calendar\": \"Calendario\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} a {end, date, long}\",\n  \"date\": \"Fecha\",\n  \"dateRange\": \"Intervalo de fecha\",\n  \"day\": \"día\",\n  \"dayPeriod\": \"a. m./p. m.\",\n  \"endDate\": \"Fecha final\",\n  \"era\": \"era\",\n  \"hour\": \"hora\",\n  \"minute\": \"minuto\",\n  \"month\": \"mes\",\n  \"second\": \"segundo\",\n  \"startDate\": \"Fecha de inicio\",\n  \"year\": \"año\",\n  \"weekday\": \"día de la semana\",\n  \"timeZoneName\": \"zona horaria\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} kuni {end, date, long}\",\n  \"date\": \"Kuupäev\",\n  \"dateRange\": \"Kuupäevavahemik\",\n  \"day\": \"päev\",\n  \"dayPeriod\": \"enne/pärast lõunat\",\n  \"endDate\": \"Lõppkuupäev\",\n  \"era\": \"ajastu\",\n  \"hour\": \"tund\",\n  \"minute\": \"minut\",\n  \"month\": \"kuu\",\n  \"second\": \"sekund\",\n  \"startDate\": \"Alguskuupäev\",\n  \"year\": \"aasta\",\n  \"weekday\": \"nädalapäev\",\n  \"timeZoneName\": \"ajavöönd\"\n}\n","{\n  \"calendar\": \"Kalenteri\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long}–{end, date, long}\",\n  \"date\": \"Päivämäärä\",\n  \"dateRange\": \"Päivämääräalue\",\n  \"day\": \"päivä\",\n  \"dayPeriod\": \"vuorokaudenaika\",\n  \"endDate\": \"Päättymispäivä\",\n  \"era\": \"aikakausi\",\n  \"hour\": \"tunti\",\n  \"minute\": \"minuutti\",\n  \"month\": \"kuukausi\",\n  \"second\": \"sekunti\",\n  \"startDate\": \"Alkamispäivä\",\n  \"year\": \"vuosi\",\n  \"weekday\": \"viikonpäivä\",\n  \"timeZoneName\": \"aikavyöhyke\"\n}\n","{\n  \"calendar\": \"Calendrier\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} au {end, date, long}\",\n  \"date\": \"Date\",\n  \"dateRange\": \"Plage de dates\",\n  \"day\": \"jour\",\n  \"dayPeriod\": \"cadran\",\n  \"endDate\": \"Date de fin\",\n  \"era\": \"ère\",\n  \"hour\": \"heure\",\n  \"minute\": \"minute\",\n  \"month\": \"mois\",\n  \"second\": \"seconde\",\n  \"startDate\": \"Date de début\",\n  \"year\": \"année\",\n  \"weekday\": \"jour de la semaine\",\n  \"timeZoneName\": \"fuseau horaire\"\n}\n","{\n  \"calendar\": \"לוח שנה\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"מ-{start, date, long} ועד {end, date, long}\",\n  \"date\": \"תאריך\",\n  \"dateRange\": \"טווח תאריכים\",\n  \"day\": \"יום\",\n  \"dayPeriod\": \"לפנה״צ/אחה״צ\",\n  \"endDate\": \"תאריך סיום\",\n  \"era\": \"תקופה\",\n  \"hour\": \"שעה\",\n  \"minute\": \"דקה\",\n  \"month\": \"חודש\",\n  \"second\": \"שנייה\",\n  \"startDate\": \"תאריך התחלה\",\n  \"year\": \"שנה\",\n  \"weekday\": \"יום בשבוע\",\n  \"timeZoneName\": \"אזור זמן\"\n}\n","{\n  \"calendar\": \"Kalendar\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} do {end, date, long}\",\n  \"date\": \"Datum\",\n  \"dateRange\": \"Raspon datuma\",\n  \"day\": \"dan\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Datum završetka\",\n  \"era\": \"era\",\n  \"hour\": \"sat\",\n  \"minute\": \"minuta\",\n  \"month\": \"mjesec\",\n  \"second\": \"sekunda\",\n  \"startDate\": \"Datum početka\",\n  \"year\": \"godina\",\n  \"weekday\": \"dan u tjednu\",\n  \"timeZoneName\": \"vremenska zona\"\n}\n","{\n  \"calendar\": \"Naptár\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} – {end, date, long}\",\n  \"date\": \"Dátum\",\n  \"dateRange\": \"Dátumtartomány\",\n  \"day\": \"nap\",\n  \"dayPeriod\": \"napszak\",\n  \"endDate\": \"Befejező dátum\",\n  \"era\": \"éra\",\n  \"hour\": \"óra\",\n  \"minute\": \"perc\",\n  \"month\": \"hónap\",\n  \"second\": \"másodperc\",\n  \"startDate\": \"Kezdő dátum\",\n  \"year\": \"év\",\n  \"weekday\": \"hét napja\",\n  \"timeZoneName\": \"időzóna\"\n}\n","{\n  \"calendar\": \"Calendario\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"Da {start, date, long} a {end, date, long}\",\n  \"date\": \"Data\",\n  \"dateRange\": \"Intervallo date\",\n  \"day\": \"giorno\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Data finale\",\n  \"era\": \"era\",\n  \"hour\": \"ora\",\n  \"minute\": \"minuto\",\n  \"month\": \"mese\",\n  \"second\": \"secondo\",\n  \"startDate\": \"Data iniziale\",\n  \"year\": \"anno\",\n  \"weekday\": \"giorno della settimana\",\n  \"timeZoneName\": \"fuso orario\"\n}\n","{\n  \"calendar\": \"カレンダー\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} ～ {end, date, long}\",\n  \"date\": \"日付\",\n  \"dateRange\": \"日付範囲\",\n  \"day\": \"日\",\n  \"dayPeriod\": \"午前/午後\",\n  \"endDate\": \"終了日\",\n  \"era\": \"時代\",\n  \"hour\": \"時\",\n  \"minute\": \"分\",\n  \"month\": \"月\",\n  \"second\": \"秒\",\n  \"startDate\": \"開始日\",\n  \"year\": \"年\",\n  \"weekday\": \"曜日\",\n  \"timeZoneName\": \"タイムゾーン\"\n}\n","{\n  \"calendar\": \"달력\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} ~ {end, date, long}\",\n  \"date\": \"날짜\",\n  \"dateRange\": \"날짜 범위\",\n  \"day\": \"일\",\n  \"dayPeriod\": \"오전/오후\",\n  \"endDate\": \"종료 날짜\",\n  \"era\": \"연호\",\n  \"hour\": \"시\",\n  \"minute\": \"분\",\n  \"month\": \"월\",\n  \"second\": \"초\",\n  \"startDate\": \"시작 날짜\",\n  \"year\": \"년\",\n  \"weekday\": \"요일\",\n  \"timeZoneName\": \"시간대\"\n}\n","{\n  \"calendar\": \"Kalendorius\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"Nuo {start, date, long} iki {end, date, long}\",\n  \"date\": \"Data\",\n  \"dateRange\": \"Datų intervalas\",\n  \"day\": \"diena\",\n  \"dayPeriod\": \"iki pietų / po pietų\",\n  \"endDate\": \"Pabaigos data\",\n  \"era\": \"era\",\n  \"hour\": \"valanda\",\n  \"minute\": \"minutė\",\n  \"month\": \"mėnuo\",\n  \"second\": \"sekundė\",\n  \"startDate\": \"Pradžios data\",\n  \"year\": \"metai\",\n  \"weekday\": \"savaitės diena\",\n  \"timeZoneName\": \"laiko juosta\"\n}\n","{\n  \"calendar\": \"Kalendārs\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} līdz {end, date, long}\",\n  \"date\": \"Datums\",\n  \"dateRange\": \"Datumu diapazons\",\n  \"day\": \"diena\",\n  \"dayPeriod\": \"priekšpusdienā/pēcpusdienā\",\n  \"endDate\": \"Beigu datums\",\n  \"era\": \"ēra\",\n  \"hour\": \"stundas\",\n  \"minute\": \"minūtes\",\n  \"month\": \"mēnesis\",\n  \"second\": \"sekundes\",\n  \"startDate\": \"Sākuma datums\",\n  \"year\": \"gads\",\n  \"weekday\": \"nedēļas diena\",\n  \"timeZoneName\": \"laika josla\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} til {end, date, long}\",\n  \"date\": \"Dato\",\n  \"dateRange\": \"Datoområde\",\n  \"day\": \"dag\",\n  \"dayPeriod\": \"a.m./p.m.\",\n  \"endDate\": \"Sluttdato\",\n  \"era\": \"tidsalder\",\n  \"hour\": \"time\",\n  \"minute\": \"minutt\",\n  \"month\": \"måned\",\n  \"second\": \"sekund\",\n  \"startDate\": \"Startdato\",\n  \"year\": \"år\",\n  \"weekday\": \"ukedag\",\n  \"timeZoneName\": \"tidssone\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} t/m {end, date, long}\",\n  \"date\": \"Datum\",\n  \"dateRange\": \"Datumbereik\",\n  \"day\": \"dag\",\n  \"dayPeriod\": \"a.m./p.m.\",\n  \"endDate\": \"Einddatum\",\n  \"era\": \"tijdperk\",\n  \"hour\": \"uur\",\n  \"minute\": \"minuut\",\n  \"month\": \"maand\",\n  \"second\": \"seconde\",\n  \"startDate\": \"Startdatum\",\n  \"year\": \"jaar\",\n  \"weekday\": \"dag van de week\",\n  \"timeZoneName\": \"tijdzone\"\n}\n","{\n  \"calendar\": \"Kalendarz\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} do {end, date, long}\",\n  \"date\": \"Data\",\n  \"dateRange\": \"Zakres dat\",\n  \"day\": \"dzień\",\n  \"dayPeriod\": \"rano / po południu / wieczorem\",\n  \"endDate\": \"Data końcowa\",\n  \"era\": \"era\",\n  \"hour\": \"godzina\",\n  \"minute\": \"minuta\",\n  \"month\": \"miesiąc\",\n  \"second\": \"sekunda\",\n  \"startDate\": \"Data początkowa\",\n  \"year\": \"rok\",\n  \"weekday\": \"dzień tygodnia\",\n  \"timeZoneName\": \"strefa czasowa\"\n}\n","{\n  \"calendar\": \"Calendário\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} a {end, date, long}\",\n  \"date\": \"Data\",\n  \"dateRange\": \"Intervalo de datas\",\n  \"day\": \"dia\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Data final\",\n  \"era\": \"era\",\n  \"hour\": \"hora\",\n  \"minute\": \"minuto\",\n  \"month\": \"mês\",\n  \"second\": \"segundo\",\n  \"startDate\": \"Data inicial\",\n  \"year\": \"ano\",\n  \"weekday\": \"dia da semana\",\n  \"timeZoneName\": \"fuso horário\"\n}\n","{\n  \"calendar\": \"Calendário\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} a {end, date, long}\",\n  \"date\": \"Data\",\n  \"dateRange\": \"Intervalo de datas\",\n  \"day\": \"dia\",\n  \"dayPeriod\": \"am/pm\",\n  \"endDate\": \"Data de Término\",\n  \"era\": \"era\",\n  \"hour\": \"hora\",\n  \"minute\": \"minuto\",\n  \"month\": \"mês\",\n  \"second\": \"segundo\",\n  \"startDate\": \"Data de Início\",\n  \"year\": \"ano\",\n  \"weekday\": \"dia da semana\",\n  \"timeZoneName\": \"fuso horário\"\n}\n","{\n  \"calendar\": \"Calendar\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} - {end, date, long}\",\n  \"date\": \"Dată\",\n  \"dateRange\": \"Raza datei\",\n  \"day\": \"zi\",\n  \"dayPeriod\": \"a.m/p.m.\",\n  \"endDate\": \"Dată final\",\n  \"era\": \"eră\",\n  \"hour\": \"oră\",\n  \"minute\": \"minut\",\n  \"month\": \"lună\",\n  \"second\": \"secundă\",\n  \"startDate\": \"Dată început\",\n  \"year\": \"an\",\n  \"weekday\": \"ziua din săptămână\",\n  \"timeZoneName\": \"fus orar\"\n}\n","{\n  \"calendar\": \"Календарь\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} – {end, date, long}\",\n  \"date\": \"Дата\",\n  \"dateRange\": \"Диапазон дат\",\n  \"day\": \"день\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Дата окончания\",\n  \"era\": \"эра\",\n  \"hour\": \"час\",\n  \"minute\": \"минута\",\n  \"month\": \"месяц\",\n  \"second\": \"секунда\",\n  \"startDate\": \"Дата начала\",\n  \"year\": \"год\",\n  \"weekday\": \"день недели\",\n  \"timeZoneName\": \"часовой пояс\"\n}\n","{\n  \"calendar\": \"Kalendár\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} do {end, date, long}\",\n  \"date\": \"Dátum\",\n  \"dateRange\": \"Rozsah dátumov\",\n  \"day\": \"deň\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Dátum ukončenia\",\n  \"era\": \"letopočet\",\n  \"hour\": \"hodina\",\n  \"minute\": \"minúta\",\n  \"month\": \"mesiac\",\n  \"second\": \"sekunda\",\n  \"startDate\": \"Dátum začatia\",\n  \"year\": \"rok\",\n  \"weekday\": \"deň týždňa\",\n  \"timeZoneName\": \"časové pásmo\"\n}\n","{\n  \"calendar\": \"Koledar\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} do {end, date, long}\",\n  \"date\": \"Datum\",\n  \"dateRange\": \"Datumski obseg\",\n  \"day\": \"dan\",\n  \"dayPeriod\": \"dop/pop\",\n  \"endDate\": \"Datum konca\",\n  \"era\": \"doba\",\n  \"hour\": \"ura\",\n  \"minute\": \"minuta\",\n  \"month\": \"mesec\",\n  \"second\": \"sekunda\",\n  \"startDate\": \"Datum začetka\",\n  \"year\": \"leto\",\n  \"weekday\": \"dan v tednu\",\n  \"timeZoneName\": \"časovni pas\"\n}\n","{\n  \"calendar\": \"Kalendar\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} do {end, date, long}\",\n  \"date\": \"Datum\",\n  \"dateRange\": \"Opseg datuma\",\n  \"day\": \"дан\",\n  \"dayPeriod\": \"пре подне/по подне\",\n  \"endDate\": \"Datum završetka\",\n  \"era\": \"ера\",\n  \"hour\": \"сат\",\n  \"minute\": \"минут\",\n  \"month\": \"месец\",\n  \"second\": \"секунд\",\n  \"startDate\": \"Datum početka\",\n  \"year\": \"година\",\n  \"weekday\": \"дан у недељи\",\n  \"timeZoneName\": \"временска зона\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} till {end, date, long}\",\n  \"date\": \"Datum\",\n  \"dateRange\": \"Datumintervall\",\n  \"day\": \"dag\",\n  \"dayPeriod\": \"fm/em\",\n  \"endDate\": \"Slutdatum\",\n  \"era\": \"era\",\n  \"hour\": \"timme\",\n  \"minute\": \"minut\",\n  \"month\": \"månad\",\n  \"second\": \"sekund\",\n  \"startDate\": \"Startdatum\",\n  \"year\": \"år\",\n  \"weekday\": \"veckodag\",\n  \"timeZoneName\": \"tidszon\"\n}\n","{\n  \"calendar\": \"Takvim\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} - {end, date, long}\",\n  \"date\": \"Tarih\",\n  \"dateRange\": \"Tarih Aralığı\",\n  \"day\": \"gün\",\n  \"dayPeriod\": \"ÖÖ/ÖS\",\n  \"endDate\": \"Bitiş Tarihi\",\n  \"era\": \"çağ\",\n  \"hour\": \"saat\",\n  \"minute\": \"dakika\",\n  \"month\": \"ay\",\n  \"second\": \"saniye\",\n  \"startDate\": \"Başlangıç Tarihi\",\n  \"year\": \"yıl\",\n  \"weekday\": \"haftanın günü\",\n  \"timeZoneName\": \"saat dilimi\"\n}\n","{\n  \"calendar\": \"Календар\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"Від {start, date, long} до {end, date, long}\",\n  \"date\": \"Дата\",\n  \"dateRange\": \"Діапазон дат\",\n  \"day\": \"день\",\n  \"dayPeriod\": \"дп/пп\",\n  \"endDate\": \"Дата завершення\",\n  \"era\": \"ера\",\n  \"hour\": \"година\",\n  \"minute\": \"хвилина\",\n  \"month\": \"місяць\",\n  \"second\": \"секунда\",\n  \"startDate\": \"Дата початку\",\n  \"year\": \"рік\",\n  \"weekday\": \"день тижня\",\n  \"timeZoneName\": \"часовий пояс\"\n}\n","{\n  \"calendar\": \"日历\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long} 至 {end, date, long}\",\n  \"date\": \"日期\",\n  \"dateRange\": \"日期范围\",\n  \"day\": \"日\",\n  \"dayPeriod\": \"上午/下午\",\n  \"endDate\": \"结束日期\",\n  \"era\": \"纪元\",\n  \"hour\": \"小时\",\n  \"minute\": \"分钟\",\n  \"month\": \"月\",\n  \"second\": \"秒\",\n  \"startDate\": \"开始日期\",\n  \"year\": \"年\",\n  \"weekday\": \"工作日\",\n  \"timeZoneName\": \"时区\"\n}\n","{\n  \"calendar\": \"日曆\",\n  \"currentDate\": \"{date, date, full}\",\n  \"currentDateRange\": \"{start, date, long}至 {end, date, long}\",\n  \"date\": \"日期\",\n  \"dateRange\": \"日期範圍\",\n  \"day\": \"日\",\n  \"dayPeriod\": \"上午/下午\",\n  \"endDate\": \"結束日期\",\n  \"era\": \"纪元\",\n  \"hour\": \"小时\",\n  \"minute\": \"分钟\",\n  \"month\": \"月\",\n  \"second\": \"秒\",\n  \"startDate\": \"開始日期\",\n  \"year\": \"年\",\n  \"weekday\": \"工作日\",\n  \"timeZoneName\": \"时区\"\n}\n","import {DatePickerFieldState, DatePickerState, DateRangePickerState} from '@react-stately/datepicker';\nimport {KeyboardEvent} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {RefObject} from 'react';\nimport {usePress} from '@react-aria/interactions';\n\nexport function useDatePickerGroup(state: DatePickerState | DateRangePickerState | DatePickerFieldState, ref: RefObject<HTMLElement>) {\n  // Open the popover on alt + arrow down\n  let onKeyDown = (e: KeyboardEvent) => {\n    if (e.altKey && e.key === 'ArrowDown' && 'setOpen' in state) {\n      e.preventDefault();\n      e.stopPropagation();\n      state.setOpen(true);\n    }\n  };\n\n  // Focus the first placeholder segment from the end on mouse down/touch up in the field.\n  let focusLast = () => {\n    let elements = ref.current.querySelectorAll('[tabindex=\"0\"]');\n    let index = elements.length - 1;\n    while (index >= 0 && elements[index].getAttribute('aria-placeholder')) {\n      index--;\n    }\n    index = Math.min(index + 1, elements.length - 1);\n    let element = elements[index] as HTMLElement;\n    if (element) {\n      element.focus();\n    }\n  };\n\n  let {pressProps} = usePress({\n    onPressStart(e) {\n      if (e.pointerType === 'mouse') {\n        focusLast();\n      }\n    },\n    onPress(e) {\n      if (e.pointerType !== 'mouse') {\n        focusLast();\n      }\n    }\n  });\n\n  return mergeProps(pressProps, {onKeyDown});\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DatePickerFieldState, DateSegment} from '@react-stately/datepicker';\nimport {DatePickerProps, DateValue} from '@react-types/datepicker';\nimport {DOMProps} from '@react-types/shared';\nimport {getScrollParent, isIOS, isMac, mergeProps, scrollIntoView, useEvent, useId} from '@react-aria/utils';\nimport {labelIds} from './useDateField';\nimport {NumberParser} from '@internationalized/number';\nimport React, {HTMLAttributes, RefObject, useMemo, useRef} from 'react';\nimport {useDateFormatter, useFilter, useLocale} from '@react-aria/i18n';\nimport {useDisplayNames} from './useDisplayNames';\nimport {useFocusManager} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\nimport {useSpinButton} from '@react-aria/spinbutton';\n\ninterface DateSegmentAria {\n  segmentProps: HTMLAttributes<HTMLDivElement>\n}\n\nexport function useDateSegment<T extends DateValue>(props: DatePickerProps<T> & DOMProps, segment: DateSegment, state: DatePickerFieldState, ref: RefObject<HTMLElement>): DateSegmentAria {\n  let enteredKeys = useRef('');\n  let {locale, direction} = useLocale();\n  let displayNames = useDisplayNames();\n  let focusManager = useFocusManager();\n\n  let textValue = segment.text;\n  let options = useMemo(() => state.dateFormatter.resolvedOptions(), [state.dateFormatter]);\n  let monthDateFormatter = useDateFormatter({month: 'long', timeZone: options.timeZone});\n  let hourDateFormatter = useDateFormatter({\n    hour: 'numeric',\n    hour12: options.hour12,\n    timeZone: options.timeZone\n  });\n\n  if (segment.type === 'month') {\n    let monthTextValue = monthDateFormatter.format(state.dateValue);\n    textValue = monthTextValue !== textValue ? `${textValue} – ${monthTextValue}` : monthTextValue;\n  } else if (segment.type === 'hour' || segment.type === 'dayPeriod') {\n    textValue = hourDateFormatter.format(state.dateValue);\n  }\n\n  let {spinButtonProps} = useSpinButton({\n    value: segment.value,\n    textValue,\n    minValue: segment.minValue,\n    maxValue: segment.maxValue,\n    isDisabled: props.isDisabled,\n    isReadOnly: props.isReadOnly || !segment.isEditable,\n    isRequired: props.isRequired,\n    onIncrement: () => {\n      enteredKeys.current = '';\n      state.increment(segment.type);\n    },\n    onDecrement: () => {\n      enteredKeys.current = '';\n      state.decrement(segment.type);\n    },\n    onIncrementPage: () => {\n      enteredKeys.current = '';\n      state.incrementPage(segment.type);\n    },\n    onDecrementPage: () => {\n      enteredKeys.current = '';\n      state.decrementPage(segment.type);\n    },\n    onIncrementToMax: () => {\n      enteredKeys.current = '';\n      state.setSegment(segment.type, segment.maxValue);\n    },\n    onDecrementToMin: () => {\n      enteredKeys.current = '';\n      state.setSegment(segment.type, segment.minValue);\n    }\n  });\n\n  let parser = useMemo(() => new NumberParser(locale, {maximumFractionDigits: 0}), [locale]);\n\n  let backspace = () => {\n    if (parser.isValidPartialNumber(segment.text) && !props.isReadOnly && !segment.isPlaceholder) {\n      let newValue = segment.text.slice(0, -1);\n      let parsed = parser.parse(newValue);\n      if (newValue.length === 0 || parsed === 0) {\n        state.clearSegment(segment.type);\n      } else {\n        state.setSegment(segment.type, parsed);\n      }\n      enteredKeys.current = newValue;\n    } else if (segment.type === 'dayPeriod') {\n      state.clearSegment(segment.type);\n    }\n  };\n\n  let onKeyDown = (e) => {\n    // Firefox does not fire selectstart for Ctrl/Cmd + A\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1742153\n    if (e.key === 'a' && (isMac() ? e.metaKey : e.ctrlKey)) {\n      e.preventDefault();\n    }\n\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') {\n          focusManager.focusNext();\n        } else {\n          focusManager.focusPrevious();\n        }\n        break;\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') {\n          focusManager.focusPrevious();\n        } else {\n          focusManager.focusNext();\n        }\n        break;\n      case 'Enter':\n        e.preventDefault();\n        e.stopPropagation();\n        if (segment.isPlaceholder && !props.isReadOnly) {\n          state.confirmPlaceholder(segment.type);\n        }\n        focusManager.focusNext();\n        break;\n      case 'Tab':\n        break;\n      case 'Backspace':\n      case 'Delete': {\n        // Safari on iOS does not fire beforeinput for the backspace key because the cursor is at the start.\n        e.preventDefault();\n        e.stopPropagation();\n        backspace();\n        break;\n      }\n    }\n  };\n\n  // Safari dayPeriod option doesn't work...\n  let {startsWith} = useFilter({sensitivity: 'base'});\n  let amPmFormatter = useDateFormatter({hour: 'numeric', hour12: true});\n  let am = useMemo(() => {\n    let date = new Date();\n    date.setHours(0);\n    return amPmFormatter.formatToParts(date).find(part => part.type === 'dayPeriod').value;\n  }, [amPmFormatter]);\n\n  let pm = useMemo(() => {\n    let date = new Date();\n    date.setHours(12);\n    return amPmFormatter.formatToParts(date).find(part => part.type === 'dayPeriod').value;\n  }, [amPmFormatter]);\n\n  let onInput = (key: string) => {\n    if (props.isDisabled || props.isReadOnly) {\n      return;\n    }\n\n    let newValue = enteredKeys.current + key;\n\n    switch (segment.type) {\n      case 'dayPeriod':\n        if (startsWith(am, key)) {\n          state.setSegment('dayPeriod', 0);\n        } else if (startsWith(pm, key)) {\n          state.setSegment('dayPeriod', 12);\n        } else {\n          break;\n        }\n        focusManager.focusNext();\n        break;\n      case 'day':\n      case 'hour':\n      case 'minute':\n      case 'second':\n      case 'month':\n      case 'year': {\n        if (!parser.isValidPartialNumber(newValue)) {\n          return;\n        }\n\n        let numberValue = parser.parse(newValue);\n        let segmentValue = numberValue;\n        let allowsZero = segment.minValue === 0;\n        if (segment.type === 'hour' && state.dateFormatter.resolvedOptions().hour12) {\n          switch (state.dateFormatter.resolvedOptions().hourCycle) {\n            case 'h11':\n              if (numberValue > 11) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n            case 'h12':\n              allowsZero = false;\n              if (numberValue > 12) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n          }\n\n          if (segment.value >= 12 && numberValue > 1) {\n            numberValue += 12;\n          }\n        } else if (numberValue > segment.maxValue) {\n          segmentValue = parser.parse(key);\n        }\n\n        if (isNaN(numberValue)) {\n          return;\n        }\n\n        let shouldSetValue = segmentValue !== 0 || allowsZero;\n        if (shouldSetValue) {\n          state.setSegment(segment.type, segmentValue);\n        }\n\n        if (Number(numberValue + '0') > segment.maxValue || newValue.length >= String(segment.maxValue).length) {\n          enteredKeys.current = '';\n          if (shouldSetValue) {\n            focusManager.focusNext();\n          }\n        } else {\n          enteredKeys.current = newValue;\n        }\n        break;\n      }\n    }\n  };\n\n  let onFocus = () => {\n    enteredKeys.current = '';\n    scrollIntoView(getScrollParent(ref.current) as HTMLElement, ref.current);\n\n    // Safari requires that a selection is set or it won't fire input events.\n    // Since usePress disables text selection, this won't happen by default.\n    ref.current.style.webkitUserSelect = 'text';\n    let selection = window.getSelection();\n    selection.collapse(ref.current);\n    ref.current.style.webkitUserSelect = '';\n  };\n\n  let compositionRef = useRef('');\n  // @ts-ignore - TODO: possibly old TS version? doesn't fail in my editor...\n  useEvent(ref, 'beforeinput', e => {\n    e.preventDefault();\n\n    switch (e.inputType) {\n      case 'deleteContentBackward':\n      case 'deleteContentForward':\n        if (parser.isValidPartialNumber(segment.text) && !props.isReadOnly) {\n          backspace();\n        }\n        break;\n      case 'insertCompositionText':\n        // insertCompositionText cannot be canceled.\n        // Record the current state of the element so we can restore it in the `input` event below.\n        compositionRef.current = ref.current.textContent;\n\n        // Safari gets stuck in a composition state unless we also assign to the value here.\n        // eslint-disable-next-line no-self-assign\n        ref.current.textContent = ref.current.textContent;\n        break;\n      default:\n        if (e.data != null) {\n          onInput(e.data);\n        }\n        break;\n    }\n  });\n\n  useEvent(ref, 'input', (e: InputEvent) => {\n    let {inputType, data} = e;\n    switch (inputType) {\n      case 'insertCompositionText':\n        // Reset the DOM to how it was in the beforeinput event.\n        ref.current.textContent = compositionRef.current;\n\n        // Android sometimes fires key presses of letters as composition events. Need to handle am/pm keys here too.\n        // Can also happen e.g. with Pinyin keyboard on iOS.\n        if (startsWith(am, data) || startsWith(pm, data)) {\n          onInput(data);\n        }\n        break;\n    }\n  });\n\n  // Focus on mouse down/touch up to match native textfield behavior.\n  // usePress handles canceling text selection.\n  let {pressProps} = usePress({\n    preventFocusOnPress: true,\n    onPressStart: (e) => {\n      if (e.pointerType === 'mouse') {\n        e.target.focus();\n      }\n    },\n    onPress(e) {\n      if (e.pointerType !== 'mouse') {\n        e.target.focus();\n      }\n    }\n  });\n\n  // For Android: prevent selection on long press.\n  useEvent(ref, 'selectstart', e => {\n    e.preventDefault();\n  });\n\n  // spinbuttons cannot be focused with VoiceOver on iOS.\n  let touchPropOverrides = isIOS() || segment.type === 'timeZoneName' ? {\n    role: 'textbox',\n    'aria-valuemax': null,\n    'aria-valuemin': null,\n    'aria-valuetext': null,\n    'aria-valuenow': null\n  } : {};\n\n  let {ariaLabelledBy, ariaDescribedBy} = labelIds.get(state);\n\n  // Only apply aria-describedby to the first segment, unless the field is invalid. This avoids it being\n  // read every time the user navigates to a new segment.\n  let firstSegment = useMemo(() => state.segments.find(s => s.isEditable), [state.segments]);\n  if (segment !== firstSegment && state.validationState !== 'invalid') {\n    ariaDescribedBy = undefined;\n  }\n\n  let id = useId(props.id);\n  let isEditable = !props.isDisabled && !props.isReadOnly && segment.isEditable;\n  return {\n    segmentProps: mergeProps(spinButtonProps, pressProps, {\n      id,\n      ...touchPropOverrides,\n      'aria-controls': props['aria-controls'],\n      // 'aria-haspopup': props['aria-haspopup'], // deprecated in ARIA 1.2\n      'aria-invalid': state.validationState === 'invalid' ? 'true' : undefined,\n      'aria-label': segment.type !== 'literal' ? displayNames.of(segment.type) : undefined,\n      'aria-labelledby': `${ariaLabelledBy} ${id}`,\n      'aria-describedby': ariaDescribedBy,\n      'aria-placeholder': segment.isPlaceholder ? segment.text : undefined,\n      'aria-readonly': props.isReadOnly || !segment.isEditable ? 'true' : undefined,\n      contentEditable: isEditable,\n      suppressContentEditableWarning: isEditable,\n      spellCheck: isEditable ? 'false' : undefined,\n      autoCapitalize: isEditable ? 'off' : undefined,\n      autoCorrect: isEditable ? 'off' : undefined,\n      // Capitalization was changed in React 17...\n      [parseInt(React.version, 10) >= 17 ? 'enterKeyHint' : 'enterkeyhint']: isEditable ? 'next' : undefined,\n      inputMode: props.isDisabled || segment.type === 'dayPeriod' || !isEditable ? undefined : 'numeric',\n      tabIndex: props.isDisabled ? undefined : 0,\n      onKeyDown,\n      onFocus\n    })\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaDatePickerProps, DateValue} from '@react-types/datepicker';\nimport {createFocusManager} from '@react-aria/focus';\nimport {DatePickerFieldState} from '@react-stately/datepicker';\nimport {HTMLAttributes, LabelHTMLAttributes, RefObject} from 'react';\nimport {mergeProps, useDescription} from '@react-aria/utils';\nimport {useDateFormatter} from '@react-aria/i18n';\nimport {useDatePickerGroup} from './useDatePickerGroup';\nimport {useField} from '@react-aria/label';\nimport {useFocusWithin} from '@react-aria/interactions';\n\n// Allows this hook to also be used with TimeField\ninterface DateFieldProps<T extends DateValue> extends Omit<AriaDatePickerProps<T>, 'value' | 'defaultValue' | 'onChange' | 'minValue' | 'maxValue' | 'placeholderValue'> {}\n\ninterface DateFieldAria {\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  fieldProps: HTMLAttributes<HTMLElement>,\n  /** Props for the description element, if any. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n  /** Props for the error message element, if any. */\n  errorMessageProps: HTMLAttributes<HTMLElement>\n}\n\nexport const labelIds = new WeakMap<DatePickerFieldState, {ariaLabelledBy: string, ariaDescribedBy: string}>();\n\nexport function useDateField<T extends DateValue>(props: DateFieldProps<T>, state: DatePickerFieldState, ref: RefObject<HTMLElement>): DateFieldAria {\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    labelElementType: 'span'\n  });\n\n  let groupProps = useDatePickerGroup(state, ref);\n\n  let {focusWithinProps} = useFocusWithin({\n    onBlurWithin() {\n      state.confirmPlaceholder();\n    }\n  });\n\n  let formatter = useDateFormatter(state.getFormatOptions({month: 'long'}));\n  let descProps = useDescription(state.value ? formatter.format(state.dateValue) : null);\n\n  let segmentLabelledBy = fieldProps['aria-labelledby'] || fieldProps.id;\n  let describedBy = [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n\n  labelIds.set(state, {\n    ariaLabelledBy: segmentLabelledBy,\n    ariaDescribedBy: describedBy\n  });\n\n  return {\n    labelProps: {\n      ...labelProps,\n      onClick: () => {\n        let focusManager = createFocusManager(ref);\n        focusManager.focusFirst();\n      }\n    },\n    fieldProps: mergeProps(fieldProps, descProps, groupProps, focusWithinProps, {\n      role: 'group',\n      'aria-disabled': props.isDisabled || undefined,\n      'aria-describedby': describedBy\n    }),\n    descriptionProps,\n    errorMessageProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MessageDictionary} from '@internationalized/message';\nimport {useLocale} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\ntype Field = 'era' | 'year' | 'month' | 'day' | 'hour' | 'minute' | 'second' | 'dayPeriod' | 'timeZoneName' | 'weekday';\ninterface DisplayNames {\n  of(field: Field): string\n}\n\nexport function useDisplayNames(): DisplayNames {\n  let {locale} = useLocale();\n  return useMemo(() => {\n    // Try to use Intl.DisplayNames if possible. It may be supported in browsers, but not support the dateTimeField\n    // type as that was only added in v2. https://github.com/tc39/intl-displaynames-v2\n    try {\n      // @ts-ignore\n      return new Intl.DisplayNames(locale, {type: 'dateTimeField'});\n    } catch (err) {\n      return new DisplayNamesPolyfill(locale);\n    }\n  }, [locale]);\n}\n\nclass DisplayNamesPolyfill implements DisplayNames {\n  private locale: string;\n  private dictionary: MessageDictionary;\n\n  constructor(locale: string) {\n    this.locale = locale;\n    this.dictionary = new MessageDictionary(intlMessages);\n  }\n\n  of(field: Field): string {\n    return this.dictionary.getStringForLocale(field, this.locale);\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {AriaDatePickerProps, AriaDateRangePickerProps, DateValue} from '@react-types/datepicker';\nimport {AriaDialogProps} from '@react-types/dialog';\nimport {createFocusManager} from '@react-aria/focus';\nimport {DateRangePickerState} from '@react-stately/datepicker';\nimport {HTMLAttributes, LabelHTMLAttributes, RefObject} from 'react';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {mergeProps, useDescription, useId, useLabels} from '@react-aria/utils';\nimport {useDatePickerGroup} from './useDatePickerGroup';\nimport {useField} from '@react-aria/label';\nimport {useFocusWithin} from '@react-aria/interactions';\nimport {useLocale, useMessageFormatter} from '@react-aria/i18n';\n\ninterface DateRangePickerAria<T extends DateValue> {\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  groupProps: HTMLAttributes<HTMLElement>,\n  startFieldProps: AriaDatePickerProps<T>,\n  endFieldProps: AriaDatePickerProps<T>,\n  /** Props for the description element, if any. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n  /** Props for the error message element, if any. */\n  errorMessageProps: HTMLAttributes<HTMLElement>,\n  buttonProps: AriaButtonProps,\n  dialogProps:  AriaDialogProps\n}\n\nexport function useDateRangePicker<T extends DateValue>(props: AriaDateRangePickerProps<T>, state: DateRangePickerState, ref: RefObject<HTMLElement>): DateRangePickerAria<T> {\n  let formatMessage = useMessageFormatter(intlMessages);\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    labelElementType: 'span'\n  });\n\n  let labelledBy = fieldProps['aria-labelledby'] || fieldProps.id;\n\n  let {locale} = useLocale();\n  let description = state.formatValue(locale, {month: 'long'});\n  let descProps = useDescription(description);\n\n  let startFieldProps = useLabels({\n    'aria-label': formatMessage('startDate'),\n    'aria-labelledby': labelledBy\n  });\n\n  let endFieldProps = useLabels({\n    'aria-label': formatMessage('endDate'),\n    'aria-labelledby': labelledBy\n  });\n\n  let buttonId = useId();\n  let dialogId = useId();\n\n  let groupProps = useDatePickerGroup(state, ref);\n  let {focusWithinProps} = useFocusWithin({\n    onBlurWithin() {\n      state.confirmPlaceholder();\n    }\n  });\n\n  let ariaDescribedBy = [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n\n  return {\n    groupProps: mergeProps(groupProps, fieldProps, descProps, focusWithinProps, {\n      role: 'group',\n      'aria-disabled': props.isDisabled || null,\n      'aria-describedby': ariaDescribedBy\n    }),\n    labelProps: {\n      ...labelProps,\n      onClick: () => {\n        let focusManager = createFocusManager(ref);\n        focusManager.focusFirst();\n      }\n    },\n    buttonProps: {\n      ...descProps,\n      id: buttonId,\n      excludeFromTabOrder: true,\n      'aria-haspopup': 'dialog',\n      'aria-label': formatMessage('calendar'),\n      'aria-labelledby': `${labelledBy} ${buttonId}`,\n      'aria-describedby': ariaDescribedBy\n    },\n    dialogProps: {\n      id: dialogId,\n      'aria-labelledby': `${labelledBy} ${buttonId}`\n    },\n    startFieldProps: {\n      ...startFieldProps,\n      'aria-describedby': fieldProps['aria-describedby']\n    },\n    endFieldProps: {\n      ...endFieldProps,\n      'aria-describedby': fieldProps['aria-describedby']\n    },\n    descriptionProps,\n    errorMessageProps\n  };\n}\n"],"names":[],"version":3,"file":"module.js.map"}