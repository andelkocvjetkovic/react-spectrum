{"mappings":";;;;;;;;;;;SC4BgB,yCAAU,CAAI,KAA4B,EAAE,KAAmB,EAAE,GAA2B,EAAe,CAAC;IAC1H,GAAG,CAAC,CAAC,KACH,EAAE,GACF,CAAY,aAAE,SAAS,GACvB,CAAiB,kBAAE,YAAY,oBAC/B,eAAe,WACf,MAAM,EACR,CAAC,GAAG,KAAK;IAET,EAAE,GAAG,YAAK,CAAC,EAAE;IAEb,GAAG,CAAC,CAAC,kBAAA,eAAe,EAAA,CAAC,GAAG,8BAAuB,CAAC,CAAC;aAC/C,GAAG;QACH,gBAAgB,EAAE,KAAK,CAAC,gBAAgB;QACxC,gBAAgB,EAAE,MAAM;yBACxB,eAAe;IACjB,CAAC;IAED,GAAG,CAAC,QAAQ,GAAG,qBAAc,CAAC,KAAK,EAAE,CAAC;QAAA,SAAS,EAAE,IAAI;IAAA,CAAC;IAEtD,MAAM,CAAC,CAAC;QACN,QAAQ,EAAE,iBAAU,CAAC,QAAQ,EAAE,CAAC;YAC9B,IAAI,EAAE,CAAY;gBAClB,EAAE;QACJ,CAAC;QACD,SAAS,EAAE,CAAC;YACV,CAAiB,kBAAE,YAAY,KAAK,SAAS,GAAG,EAAE,GAAG,IAAI;YACzD,IAAI,EAAE,CAAM;eACT,eAAe;QACpB,CAAC;IACH,CAAC;AACH,CAAC;;;;;;;SCrCe,yCAAc,CAAI,KAAkC,EAAE,KAAmB,EAAE,GAAwC,EAAmB,CAAC;IACrJ,GAAG,CAAC,CAAC,OACH,IAAI,GACJ,CAAc,eAAE,WAAW,EAC7B,CAAC,GAAG,KAAK;IAET,GAAG,CAAC,CAAC,YAAA,SAAS,EAAA,CAAC,GAAG,wBAAiB,CAAC,CAAC;QACnC,gBAAgB,EAAE,KAAK,CAAC,gBAAgB;QACxC,GAAG,EAAE,IAAI,CAAC,GAAG;aACb,GAAG;IACL,CAAC;IAED,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG;IAChD,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG;IAE3D,MAAM,CAAC,CAAC;QACN,aAAa,EAAE,CAAC;YACd,IAAI,EAAE,CAAU;QAClB,CAAC;QACD,iBAAiB,EAAE,CAAC;YAClB,IAAI,EAAE,CAAM;YACZ,MAAM,EAAE,CAAO;YACf,CAAe,gBAAE,UAAU;YAC3B,CAAc,eAAE,UAAU,GAAG,WAAW,IAAI,CAAM,QAAG,SAAS;eAC3D,SAAS;QACd,CAAC;IACH,CAAC;AACH,CAAC;;","sources":["packages/@react-aria/sidenav/src/index.ts","packages/@react-aria/sidenav/src/useSideNav.ts","packages/@react-aria/sidenav/src/useSideNavItem.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useSideNav';\nexport * from './useSideNavItem';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaSideNavProps} from '@react-types/sidenav';\nimport {filterDOMProps, mergeProps, useId} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject} from 'react';\nimport {KeyboardDelegate} from '@react-types/shared';\nimport {TreeState} from '@react-stately/tree';\nimport {useSelectableCollection} from '@react-aria/selection';\n\ninterface SideNavAriaOptions<T> extends AriaSideNavProps<T> {\n  layout?: KeyboardDelegate\n}\n\ninterface SideNavAria {\n  navProps: HTMLAttributes<HTMLDivElement>,\n  listProps: HTMLAttributes<HTMLUListElement>\n}\n\nexport function useSideNav<T>(props: SideNavAriaOptions<T>, state: TreeState<T>, ref: RefObject<HTMLElement>): SideNavAria {\n  let {\n    id,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabeldBy,\n    shouldFocusWrap,\n    layout\n  } = props;\n\n  id = useId(id);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: layout,\n    shouldFocusWrap\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  return {\n    navProps: mergeProps(domProps, {\n      role: 'navigation',\n      id\n    }),\n    listProps: {\n      'aria-labelledby': ariaLabeldBy || (ariaLabel ? id : null),\n      role: 'list',\n      ...collectionProps\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AnchorHTMLAttributes, HTMLAttributes, RefObject} from 'react';\nimport {SpectrumSideNavItemProps} from '@react-types/sidenav';\nimport {TreeState} from '@react-stately/tree';\nimport {useSelectableItem} from '@react-aria/selection';\n\ninterface SideNavItemAria {\n  listItemProps: HTMLAttributes<HTMLDivElement>,\n  listItemLinkProps: AnchorHTMLAttributes<HTMLAnchorElement>\n}\n\nexport function useSideNavItem<T>(props: SpectrumSideNavItemProps<T>, state: TreeState<T>, ref: RefObject<HTMLAnchorElement | null>): SideNavItemAria {\n  let {\n    item,\n    'aria-current': ariaCurrent\n  } = props;\n\n  let {itemProps} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: item.key,\n    ref\n  });\n\n  let isDisabled = state.disabledKeys.has(item.key);\n  let isSelected = state.selectionManager.isSelected(item.key);\n\n  return {\n    listItemProps: {\n      role: 'listitem'\n    },\n    listItemLinkProps: {\n      role: 'link',\n      target: '_self',\n      'aria-disabled': isDisabled,\n      'aria-current': isSelected ? ariaCurrent || 'page' : undefined,\n      ...itemProps\n    }\n  };\n}\n"],"names":[],"version":3,"file":"module.js.map"}