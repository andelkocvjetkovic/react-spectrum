{"mappings":"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","sources":["packages/@react-spectrum/card/src/index.ts","packages/@react-spectrum/card/src/CardView.tsx","packages/@react-spectrum/card/src/CardBase.tsx","packages/@adobe/spectrum-css-temp/components/card/vars.css","packages/@react-spectrum/card/src/CardViewContext.tsx","packages/@react-spectrum/card/intl/*.js","packages/@react-spectrum/card/intl/ar-AE.json","packages/@react-spectrum/card/intl/bg-BG.json","packages/@react-spectrum/card/intl/cs-CZ.json","packages/@react-spectrum/card/intl/da-DK.json","packages/@react-spectrum/card/intl/de-DE.json","packages/@react-spectrum/card/intl/el-GR.json","packages/@react-spectrum/card/intl/en-US.json","packages/@react-spectrum/card/intl/es-ES.json","packages/@react-spectrum/card/intl/et-EE.json","packages/@react-spectrum/card/intl/fi-FI.json","packages/@react-spectrum/card/intl/fr-FR.json","packages/@react-spectrum/card/intl/he-IL.json","packages/@react-spectrum/card/intl/hr-HR.json","packages/@react-spectrum/card/intl/hu-HU.json","packages/@react-spectrum/card/intl/it-IT.json","packages/@react-spectrum/card/intl/ja-JP.json","packages/@react-spectrum/card/intl/ko-KR.json","packages/@react-spectrum/card/intl/lt-LT.json","packages/@react-spectrum/card/intl/lv-LV.json","packages/@react-spectrum/card/intl/nb-NO.json","packages/@react-spectrum/card/intl/nl-NL.json","packages/@react-spectrum/card/intl/pl-PL.json","packages/@react-spectrum/card/intl/pt-BR.json","packages/@react-spectrum/card/intl/pt-PT.json","packages/@react-spectrum/card/intl/ro-RO.json","packages/@react-spectrum/card/intl/ru-RU.json","packages/@react-spectrum/card/intl/sk-SK.json","packages/@react-spectrum/card/intl/sl-SI.json","packages/@react-spectrum/card/intl/sr-SP.json","packages/@react-spectrum/card/intl/sv-SE.json","packages/@react-spectrum/card/intl/tr-TR.json","packages/@react-spectrum/card/intl/uk-UA.json","packages/@react-spectrum/card/intl/zh-CN.json","packages/@react-spectrum/card/intl/zh-TW.json","packages/@react-spectrum/card/src/GalleryLayout.tsx","packages/@react-spectrum/card/src/BaseLayout.tsx","packages/@react-spectrum/card/src/GridLayout.tsx","packages/@react-spectrum/card/src/WaterfallLayout.tsx","packages/@react-spectrum/card/src/Card.tsx"],"sourcesContent":["/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/// <reference types=\"css-module-types\" />\n\nexport * from './CardView';\nexport * from './GalleryLayout';\nexport * from './GridLayout';\nexport * from './WaterfallLayout';\nexport * from './Card';\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CardBase} from './CardBase';\nimport {CardViewContext, useCardViewContext} from './CardViewContext';\nimport {classNames, useDOMRef, useStyleProps, useUnwrapDOMRef} from '@react-spectrum/utils';\nimport {DOMRef, DOMRefValue, Node} from '@react-types/shared';\nimport {GridCollection, useGridState} from '@react-stately/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {ProgressCircle} from '@react-spectrum/progress';\nimport React, {ReactElement, useCallback, useMemo, useRef} from 'react';\nimport {ReusableView} from '@react-stately/virtualizer';\nimport {SpectrumCardViewProps} from '@react-types/card';\nimport styles from '@adobe/spectrum-css-temp/components/card/vars.css';\nimport {useCollator, useLocale, useMessageFormatter} from '@react-aria/i18n';\nimport {useGrid, useGridCell, useGridRow} from '@react-aria/grid';\nimport {useListState} from '@react-stately/list';\nimport {useProvider} from '@react-spectrum/provider';\nimport {Virtualizer, VirtualizerItem} from '@react-aria/virtualizer';\n\nfunction CardView<T extends object>(props: SpectrumCardViewProps<T>, ref: DOMRef<HTMLDivElement>) {\n  let {scale} = useProvider();\n  let {styleProps} = useStyleProps(props);\n  let domRef = useDOMRef(ref);\n  let {\n    isQuiet,\n    renderEmptyState,\n    layout,\n    loadingState,\n    onLoadMore,\n    cardOrientation = 'vertical'\n  } = props;\n\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let isLoading = loadingState === 'loading' || loadingState === 'loadingMore';\n  let cardViewLayout = useMemo(() => typeof layout === 'function' ? new layout({collator, cardOrientation, scale}) : layout, [layout, collator, cardOrientation, scale]);\n  let layoutType = cardViewLayout.layoutType;\n\n  let formatMessage = useMessageFormatter(intlMessages);\n  let {direction} = useLocale();\n  let {collection} = useListState(props);\n\n  let gridCollection = useMemo(() => new GridCollection<T>({\n    columnCount: 1,\n    items: [...collection].map(item => ({\n      // Makes the Grid row use the keys the user provides to the cards so that selection change via interactions returns the card keys\n      ...item,\n      hasChildNodes: true,\n      childNodes: [{\n        key: `cell-${item.key}`,\n        type: 'cell',\n        value: null,\n        level: 0,\n        rendered: null,\n        textValue: item.textValue,\n        hasChildNodes: false,\n        childNodes: []\n      }]\n    }))\n  }), [collection]);\n\n  let state = useGridState({\n    ...props,\n    selectionMode: cardOrientation === 'horizontal' && layoutType === 'grid' ? 'none' : props.selectionMode,\n    collection: gridCollection,\n    focusMode: 'cell'\n  });\n\n  cardViewLayout.collection = gridCollection;\n  cardViewLayout.disabledKeys = state.disabledKeys;\n  cardViewLayout.isLoading = isLoading;\n  cardViewLayout.direction = direction;\n\n  let {gridProps} = useGrid({\n    ...props,\n    isVirtualized: true,\n    keyboardDelegate: cardViewLayout\n  }, state, domRef);\n\n  type View = ReusableView<Node<T>, unknown>;\n  let renderWrapper = (parent: View, reusableView: View) => (\n    <VirtualizerItem\n      key={reusableView.key}\n      reusableView={reusableView}\n      parent={parent} />\n  );\n\n  let focusedKey = state.selectionManager.focusedKey;\n  let focusedItem = gridCollection.getItem(state.selectionManager.focusedKey);\n  if (focusedItem?.parentKey != null) {\n    focusedKey = focusedItem.parentKey;\n  }\n\n  let margin = cardViewLayout.margin || 0;\n  let virtualizer = cardViewLayout.virtualizer;\n  let scrollToItem = useCallback((key) => {\n    virtualizer && virtualizer.scrollToItem(key, {\n      duration: 0,\n      offsetY: margin\n    });\n  }, [margin, virtualizer]);\n\n  // TODO: does aria-row count and aria-col count need to be modified? Perhaps aria-col count needs to be omitted\n  return (\n    <CardViewContext.Provider value={{state, isQuiet, layout: cardViewLayout, cardOrientation}}>\n      <Virtualizer\n        {...gridProps}\n        {...styleProps}\n        className={classNames(styles, 'spectrum-CardView')}\n        ref={domRef}\n        focusedKey={focusedKey}\n        scrollDirection=\"vertical\"\n        layout={cardViewLayout}\n        collection={gridCollection}\n        isLoading={isLoading}\n        onLoadMore={onLoadMore}\n        renderWrapper={renderWrapper}\n        transitionDuration={isLoading ? 160 : 220}\n        scrollToItem={scrollToItem}>\n        {(type, item) => {\n          if (type === 'item') {\n            return (\n              <InternalCard item={item} />\n            );\n          } else if (type === 'loader') {\n            return (\n              <CenteredWrapper>\n                <ProgressCircle\n                  isIndeterminate\n                  aria-label={state.collection.size > 0 ? formatMessage('loadingMore') : formatMessage('loading')} />\n              </CenteredWrapper>\n            );\n          } else if (type === 'placeholder') {\n            let emptyState = renderEmptyState ? renderEmptyState() : null;\n            if (emptyState == null) {\n              return null;\n            }\n\n            return (\n              <CenteredWrapper>\n                {emptyState}\n              </CenteredWrapper>\n            );\n          }\n        }}\n      </Virtualizer>\n    </CardViewContext.Provider>\n\n  );\n}\n\nfunction CenteredWrapper({children}) {\n  let {state} = useCardViewContext();\n  return (\n    <div\n      role=\"row\"\n      aria-rowindex={state.collection.size + 1}\n      className={classNames(styles, 'spectrum-CardView-centeredWrapper')}>\n      <div role=\"gridcell\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\nfunction InternalCard(props) {\n  let {\n    item\n  } = props;\n  let cellNode = [...item.childNodes][0];\n  let {state, cardOrientation, isQuiet, layout} = useCardViewContext();\n\n  let layoutType = layout.layoutType;\n  let rowRef = useRef();\n  let cellRef = useRef<DOMRefValue<HTMLDivElement>>();\n  let unwrappedRef = useUnwrapDOMRef(cellRef);\n\n  let {rowProps} = useGridRow({\n    node: item,\n    isVirtualized: true\n  }, state, rowRef);\n\n  let {gridCellProps} = useGridCell({\n    node: cellNode,\n    focusMode: 'cell'\n  }, state, unwrappedRef);\n\n\n  if (layoutType === 'grid' || layoutType === 'gallery') {\n    isQuiet = true;\n  }\n\n  if (layoutType !== 'grid') {\n    cardOrientation = 'vertical';\n  }\n\n  // We don't want to focus the checkbox (or any other focusable elements) within the Card\n  // when pressing the arrow keys so we delete the key down handler here. Arrow key navigation between\n  // the cards in the CardView is handled by useGrid => useSelectableCollection instead.\n  delete gridCellProps.onKeyDownCapture;\n  return (\n    <div {...rowProps} ref={rowRef} className={classNames(styles, 'spectrum-CardView-row')}>\n      <CardBase\n        ref={cellRef}\n        articleProps={gridCellProps}\n        isQuiet={isQuiet}\n        orientation={cardOrientation}\n        item={item}\n        layout={layoutType}>\n        {item.rendered}\n      </CardBase>\n    </div>\n  );\n}\n\n/**\n * TODO: Add description of component here.\n */\nconst _CardView = React.forwardRef(CardView) as <T>(props: SpectrumCardViewProps<T> & {ref?: DOMRef<HTMLDivElement>}) => ReactElement;\nexport {_CardView as CardView};\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCardProps, SpectrumCardProps} from '@react-types/card';\nimport {Checkbox} from '@react-spectrum/checkbox';\nimport {classNames, SlotProvider, useDOMRef, useHasChild, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef, Node} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useLayoutEffect, useResizeObserver, useSlotId} from '@react-aria/utils';\nimport {FocusRing} from '@react-aria/focus';\nimport {getFocusableTreeWalker} from  '@react-aria/focus';\nimport React, {HTMLAttributes, useCallback, useMemo, useRef, useState} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/card/vars.css';\nimport {useCardViewContext} from './CardViewContext';\nimport {useFocusWithin, useHover} from '@react-aria/interactions';\nimport {useProviderProps} from '@react-spectrum/provider';\n\ninterface CardBaseProps<T> extends SpectrumCardProps {\n  articleProps?: HTMLAttributes<HTMLElement>,\n  item?: Node<T>\n}\n\nfunction CardBase<T extends object>(props: CardBaseProps<T>, ref: DOMRef<HTMLDivElement>) {\n  props = useProviderProps(props);\n  let context = useCardViewContext() || {}; // we can call again here, won't change from Card.tsx\n  let {state} = context;\n  let manager = state?.selectionManager;\n  let {\n    isQuiet,\n    orientation = 'vertical',\n    articleProps = {},\n    item,\n    layout,\n    children\n  } = props;\n\n  let key = item?.key;\n  let isSelected = manager?.isSelected(key);\n  let isDisabled = state?.disabledKeys.has(key);\n  let onChange = () => manager?.select(key);\n\n  let {styleProps} = useStyleProps(props);\n  let {cardProps, titleProps, contentProps} = useCard(props);\n  let domRef = useDOMRef(ref);\n  let gridRef = useRef<HTMLDivElement>();\n  let checkboxRef = useRef(null);\n\n  // cards are only interactive if there is a selection manager and it allows selection\n  let {hoverProps, isHovered} = useHover({isDisabled: manager === undefined || manager?.selectionMode === 'none' || isDisabled});\n  let [isFocused, setIsFocused] = useState(false);\n  let {focusWithinProps} = useFocusWithin({\n    onFocusWithinChange: setIsFocused,\n    isDisabled\n  });\n\n  // ToDo: see css for comment about avatar under selector .spectrum-Card--noLayout.spectrum-Card--default\n  let hasPreviewImage = useHasChild(`.${styles['spectrum-Card-image']}`, gridRef);\n  let hasPreviewIllustration = useHasChild(`.${styles['spectrum-Card-illustration']}`, gridRef);\n  let hasPreview = hasPreviewImage || hasPreviewIllustration;\n\n  // this is for horizontal cards\n  let [height, setHeight] = useState(NaN);\n  let updateHeight = useCallback(() => {\n    if (orientation !== 'horizontal') {\n      return;\n    }\n\n    let cardHeight = gridRef.current.getBoundingClientRect().height;\n    setHeight(cardHeight);\n  }, [orientation, gridRef, setHeight]);\n  useResizeObserver({ref: gridRef, onResize: updateHeight});\n\n  let aspectRatioEnforce = undefined;\n  if (orientation === 'horizontal' && !isNaN(height)) {\n    aspectRatioEnforce = {\n      height: `${height}px`,\n      width: `${height}px`\n    };\n  }\n\n  let slots = useMemo(() => ({\n    image: {UNSAFE_className: classNames(styles, 'spectrum-Card-image'), objectFit: orientation === 'horizontal' ? 'cover' : 'contain', alt: '', ...aspectRatioEnforce},\n    illustration: {UNSAFE_className: classNames(styles, 'spectrum-Card-illustration'), ...aspectRatioEnforce},\n    avatar: {UNSAFE_className: classNames(styles, 'spectrum-Card-avatar'), size: 'avatar-size-400'},\n    heading: {UNSAFE_className: classNames(styles, 'spectrum-Card-heading'), ...titleProps},\n    content: {UNSAFE_className: classNames(styles, 'spectrum-Card-content'), ...contentProps},\n    detail: {UNSAFE_className: classNames(styles, 'spectrum-Card-detail')}\n  }), [titleProps, contentProps, height, isQuiet, orientation]);\n\n  useLayoutEffect(() => {\n    if (gridRef?.current) {\n      let walker = getFocusableTreeWalker(gridRef.current);\n      let nextNode = walker.nextNode();\n      while (nextNode != null) {\n        if (checkboxRef.current && !checkboxRef.current.UNSAFE_getDOMNode().contains(nextNode)) {\n          console.warn('Card does not support focusable elements, please contact the team regarding your use case.');\n          break;\n        }\n        nextNode = walker.nextNode();\n      }\n    }\n  }, [children]);\n\n  return (\n    <FocusRing focusRingClass={classNames(styles, 'focus-ring')}>\n      <article\n        {...styleProps}\n        {...mergeProps(cardProps, focusWithinProps, hoverProps, filterDOMProps(props), articleProps)}\n        ref={domRef}\n        className={classNames(styles, 'spectrum-Card', {\n          'spectrum-Card--default': !isQuiet && orientation !== 'horizontal',\n          'spectrum-Card--isQuiet': isQuiet && orientation !== 'horizontal',\n          'spectrum-Card--horizontal': orientation === 'horizontal',\n          'spectrum-Card--noPreview': !hasPreview,\n          'is-hovered': isHovered,\n          'is-focused': isFocused,\n          'is-selected': isSelected,\n          'spectrum-Card--waterfall': layout === 'waterfall',\n          'spectrum-Card--gallery': layout === 'gallery',\n          'spectrum-Card--grid': layout === 'grid',\n          'spectrum-Card--noLayout': layout !== 'waterfall' && layout !== 'gallery' && layout !== 'grid'\n        }, styleProps.className)}>\n        <div ref={gridRef} className={classNames(styles, 'spectrum-Card-grid')}>\n          {manager && manager.selectionMode !== 'none' && (\n            <div className={classNames(styles, 'spectrum-Card-checkboxWrapper')}>\n              <Checkbox\n                ref={checkboxRef}\n                isDisabled={isDisabled}\n                excludeFromTabOrder\n                isSelected={isSelected}\n                onChange={onChange}\n                UNSAFE_className={classNames(styles, 'spectrum-Card-checkbox')}\n                isEmphasized\n                aria-label=\"select\" />\n            </div>\n          )}\n          <SlotProvider slots={slots}>\n            {children}\n          </SlotProvider>\n          <div className={classNames(styles, 'spectrum-Card-decoration')} />\n        </div>\n      </article>\n    </FocusRing>\n  );\n}\n\ninterface AriaCardOptions extends AriaCardProps {\n}\n\ninterface CardAria {\n  cardProps: HTMLAttributes<HTMLDivElement>,\n  titleProps: HTMLAttributes<HTMLDivElement>,\n  contentProps: HTMLAttributes<HTMLDivElement>\n}\n\nfunction useCard(props: AriaCardOptions): CardAria {\n  let titleId = useSlotId();\n  let descriptionId = useSlotId();\n  let titleProps = useMemo(() => ({\n    id: titleId\n  }), [titleId]);\n  let contentProps = useMemo(() => ({\n    id: descriptionId\n  }), [descriptionId]);\n\n  return {\n    cardProps: {\n      ...filterDOMProps(props),\n      'aria-labelledby': titleId,\n      'aria-describedby': descriptionId,\n      tabIndex: 0\n    },\n    titleProps,\n    contentProps\n  };\n}\n\n/**\n * TODO: Add description of component here.\n */\nconst _CardBase = React.forwardRef(CardBase);\nexport {_CardBase as CardBase};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {useContext} from 'react';\n\nexport const CardViewContext = React.createContext(null);\n\nexport function useCardViewContext() {\n  return useContext(CardViewContext);\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","{\n  \"loading\": \"جارٍ التحميل...\",\n  \"loadingMore\": \"جارٍ تحميل المزيد...\"\n}\n","{\n  \"loading\": \"Зареждане...\",\n  \"loadingMore\": \"Зареждане на още...\"\n}\n","{\n  \"loading\": \"Načítání...\",\n  \"loadingMore\": \"Načítání dalších...\"\n}\n","{\n  \"loading\": \"Indlæser ...\",\n  \"loadingMore\": \"Indlæser flere ...\"\n}\n","{\n  \"loading\": \"Laden...\",\n  \"loadingMore\": \"Mehr laden ...\"\n}\n","{\n  \"loading\": \"Φόρτωση...\",\n  \"loadingMore\": \"Φόρτωση περισσότερων...\"\n}\n","{\n  \"loading\": \"Loading…\",\n  \"loadingMore\": \"Loading more…\"\n}\n","{\n  \"loading\": \"Cargando…\",\n  \"loadingMore\": \"Cargando más…\"\n}\n","{\n  \"loading\": \"Laadimine...\",\n  \"loadingMore\": \"Laadi rohkem...\"\n}\n","{\n  \"loading\": \"Ladataan…\",\n  \"loadingMore\": \"Ladataan lisää…\"\n}\n","{\n  \"loading\": \"Chargement...\",\n  \"loadingMore\": \"Chargement supplémentaire...\"\n}\n","{\n  \"loading\": \"טוען...\",\n  \"loadingMore\": \"טוען עוד...\"\n}\n","{\n  \"loading\": \"Učitavam...\",\n  \"loadingMore\": \"Učitavam još...\"\n}\n","{\n  \"loading\": \"Betöltés folyamatban…\",\n  \"loadingMore\": \"Továbbiak betöltése folyamatban…\"\n}\n","{\n  \"loading\": \"Caricamento...\",\n  \"loadingMore\": \"Caricamento altri...\"\n}\n","{\n  \"loading\": \"読み込み中...\",\n  \"loadingMore\": \"さらに読み込み中...\"\n}\n","{\n  \"loading\": \"로드 중\",\n  \"loadingMore\": \"추가 로드 중\"\n}\n","{\n  \"loading\": \"Įkeliama...\",\n  \"loadingMore\": \"Įkeliama daugiau...\"\n}\n","{\n  \"loading\": \"Notiek ielāde...\",\n  \"loadingMore\": \"Tiek ielādēts vēl...\"\n}\n","{\n  \"loading\": \"Laster inn ...\",\n  \"loadingMore\": \"Laster inn flere ...\"\n}\n","{\n  \"loading\": \"Laden...\",\n  \"loadingMore\": \"Meer laden...\"\n}\n","{\n  \"loading\": \"Ładowanie...\",\n  \"loadingMore\": \"Wczytywanie większej liczby...\"\n}\n","{\n  \"loading\": \"Carregando...\",\n  \"loadingMore\": \"Carregando mais...\"\n}\n","{\n  \"loading\": \"A carregar...\",\n  \"loadingMore\": \"A carregar mais...\"\n}\n","{\n  \"loading\": \"Se încarcă...\",\n  \"loadingMore\": \"Se încarcă mai multe...\"\n}\n","{\n  \"loading\": \"Загрузка...\",\n  \"loadingMore\": \"Дополнительная загрузка...\"\n}\n","{\n  \"loading\": \"Načítava sa...\",\n  \"loadingMore\": \"Načítava sa viac...\"\n}\n","{\n  \"loading\": \"Nalaganje...\",\n  \"loadingMore\": \"Nalaganje več vsebine...\"\n}\n","{\n  \"loading\": \"Učitavam...\",\n  \"loadingMore\": \"Učitavam još...\"\n}\n","{\n  \"loading\": \"Läser in...\",\n  \"loadingMore\": \"Läser in mer...\"\n}\n","{\n  \"loading\": \"Yükleniyor...\",\n  \"loadingMore\": \"Daha fazla yükleniyor...\"\n}\n","{\n  \"loading\": \"Завантаження…\",\n  \"loadingMore\": \"Завантаження інших об’єктів...\"\n}\n","{\n  \"loading\": \"正在加载...\",\n  \"loadingMore\": \"正在加载更多...\"\n}\n","{\n  \"loading\": \"正在載入\",\n  \"loadingMore\": \"正在載入更多…\"\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseLayout, BaseLayoutOptions} from './BaseLayout';\nimport {LayoutInfo, Rect, Size} from '@react-stately/virtualizer';\n\nexport interface GalleryLayoutOptions extends BaseLayoutOptions {\n  // /**\n  //  * The card size in the grid.\n  //  */\n  // cardSize?: 'S' | 'M' | 'L',\n  /**\n   * The the default row height. Note this must be larger than the min item height.\n   * @default 208\n   */\n  idealRowHeight?: number,\n  /**\n   * The spacing between items.\n   * @default 18 x 18\n   */\n  itemSpacing?: Size,\n  /**\n   * The vertical padding for an item.\n   * @default 78\n   */\n  itemPadding?: number,\n  /**\n   * Minimum size for a item in the grid.\n   * @default 136 x 136\n   */\n  minItemSize?: Size,\n  /**\n   * Target for adding extra weight to elements during linear partitioning. Anything with an aspect ratio smaler than this value\n   * will be targeted.\n   * @type {number}\n   */\n  threshold?: number\n}\n\nconst DEFAULT_OPTIONS = {\n  S: {\n    idealRowHeight: 112,\n    minItemSize: new Size(96, 96),\n    itemSpacing: new Size(8, 16),\n    itemPadding: 24,\n    dropSpacing: 50,\n    margin: 8\n  },\n  L: {\n    idealRowHeight: 208,\n    minItemSize: new Size(136, 136),\n    itemSpacing: new Size(18, 18),\n    itemPadding: {\n      'medium': 78,\n      'large': 99\n    },\n    dropSpacing: 100,\n    margin: 24\n  }\n};\n\nexport class GalleryLayout<T> extends BaseLayout<T> {\n  protected idealRowHeight: number;\n  protected itemSpacing: Size;\n  itemPadding: number;\n  protected minItemSize: Size;\n  protected threshold: number;\n\n  constructor(options: GalleryLayoutOptions = {}) {\n    super(options);\n    let cardSize = 'L';\n    this.idealRowHeight = options.idealRowHeight || DEFAULT_OPTIONS[cardSize].idealRowHeight;\n    this.itemSpacing = options.itemSpacing || DEFAULT_OPTIONS[cardSize].itemSpacing;\n    this.itemPadding = options.itemPadding != null ? options.itemPadding : DEFAULT_OPTIONS[cardSize].itemPadding[this.scale];\n    this.minItemSize = options.minItemSize || DEFAULT_OPTIONS[cardSize].minItemSize;\n    this.threshold = options.threshold || 1;\n    this.margin = options.margin != null ? options.margin : DEFAULT_OPTIONS[cardSize].margin;\n  }\n\n  get layoutType() {\n    return 'gallery';\n  }\n\n  /**\n   * Takes a row of widths and if there are any widths smaller than the min-width, leech width starting from\n   * the widest in the row until it can't give anymore, then move to the second widest and so forth.\n   * Do this until all assets meet the min-width.\n   * */\n  _distributeWidths(widths) {\n    // create a copy of the widths array and sort it largest to smallest\n    let sortedWidths = widths.concat().sort((a, b) => a[1] > b[1] ? -1 : 1);\n    for (let width of widths) {\n      // for each width, if it's smaller than the min width\n      if (width[1] < this.minItemSize.width) {\n        // then figure out how much smaller\n        let delta = this.minItemSize.width - width[1];\n        for (let item of sortedWidths) {\n          // go from the largest width in the row to the smallest\n          // if the width is greater than the min width\n          if (widths[item[0]][1] > this.minItemSize.width) {\n            // subtract the delta from the width, if it's still greater than the min width\n            // then we have finished, subtract the delta permanently from that width\n            if (widths[item[0]][1] - delta > this.minItemSize.width) {\n              widths[item[0]][1] -= delta;\n              delta = 0;\n              break;\n            } else {\n              // otherwise, we take as much as we can from the current width and then move on to\n              // the next largest and take some width from it\n              let maxChange = widths[item[0]][1] - this.minItemSize.width;\n              delta -= maxChange;\n              widths[item[0]][1] -= maxChange;\n            }\n          }\n        }\n        if (delta > 0) {\n          return false;\n        }\n        // force the width to be the min width that we just rebalanced for\n        width[1] = this.minItemSize.width;\n      }\n    }\n    return true;\n  }\n\n  buildCollection() {\n    let visibleWidth = this.virtualizer.visibleRect.width;\n    let visibleHeight = this.virtualizer.visibleRect.height;\n    let y = this.margin;\n    let availableWidth = visibleWidth - this.margin * 2;\n\n    // If avaliable width is not greater than 0, skip node layout calculations\n    if (availableWidth > 0) {\n      // Compute aspect ratios for all of the items, and the total width if all items were on in a single row.\n      let ratios = [];\n      let totalWidth = 0;\n      let minRatio = this.minItemSize.width / this.minItemSize.height;\n      let maxRatio = availableWidth / this.minItemSize.height;\n\n      for (let node of this.collection) {\n        let ratio = node.props.width / node.props.height;\n        if (ratio < minRatio) {\n          ratio = minRatio;\n        } else if (ratio > maxRatio && ratio !== minRatio) {\n          ratio = maxRatio;\n        }\n\n        let itemWidth = ratio * this.minItemSize.height;\n        ratios.push(ratio);\n        totalWidth += itemWidth;\n      }\n\n      totalWidth += this.itemSpacing.width * (this.collection.size - 1);\n\n      // Determine how many rows we'll need, and partition the items into rows\n      // using the aspect ratios as weights.\n      let rows = Math.max(1, Math.ceil(totalWidth / availableWidth));\n      // if the available width can't hold two items, then every item will get its own row\n      // this leads to a faster run through linear partition and more dependable output for small row widths\n      if (availableWidth <= (this.minItemSize.width * 2) + (this.itemPadding * 2)) {\n        rows = this.collection.size;\n      }\n\n      let weightedRatios = ratios.map(ratio => ratio < this.threshold ? ratio + (0.5 * (1 / ratio)) : ratio);\n      let partition = linearPartition(weightedRatios, rows);\n\n      let index = 0;\n      for (let row of partition) {\n        // Compute the total weight for this row\n        let totalWeight = 0;\n        for (let j = index; j < index + row.length; j++) {\n          totalWeight += ratios[j];\n        }\n\n        // Determine the row height based on the total available width and weight of this row.\n        let bestRowHeight = (availableWidth - (row.length - 1) * this.itemSpacing.width) / totalWeight;\n\n        // if this is the last row and the row height is >2x the ideal row height, then cap to the ideal height\n        // probably doing this because if the last row has one extremely tall image, then the row becomes huge\n        // though that can happen anywhere if a row has lots of tall images... so i'm not sure why this one matters\n        if (row === partition[partition.length - 1] && bestRowHeight > this.idealRowHeight * 2) {\n          bestRowHeight = this.idealRowHeight;\n        }\n        let itemHeight = Math.round(bestRowHeight) + this.itemPadding;\n        let x = this.margin;\n\n        // if any items are going to end up too small, add a bit of width to them and subtract it from wider objects\n        let widths = [];\n        for (let j = index; j < index + row.length; j++) {\n          let width = Math.round(bestRowHeight * ratios[j]);\n          widths.push([j - index, width]);\n        }\n        this._distributeWidths(widths);\n\n        // Create items for this row.\n        for (let j = index; j < index + row.length; j++) {\n          let node = this.collection.rows[j];\n          let itemWidth = Math.max(widths[j - index][1], this.minItemSize.width);\n          let rect = new Rect(x, y, itemWidth, itemHeight);\n          let layoutInfo = new LayoutInfo(node.type, node.key, rect);\n          layoutInfo.allowOverflow = true;\n          this.layoutInfos.set(node.key, layoutInfo);\n          x += itemWidth + this.itemSpacing.width;\n        }\n\n        y += itemHeight + this.itemSpacing.height;\n        index += row.length;\n      }\n\n      if (this.isLoading) {\n        let loaderY = y;\n        let loaderHeight = 60;\n        // If there aren't any items, make loader take all avaliable room and remove margin from y calculation\n        // so it doesn't scroll\n        if (this.collection.size === 0) {\n          loaderY = 0;\n          loaderHeight = visibleHeight || 60;\n        }\n\n        let rect = new Rect(0, loaderY, visibleWidth, loaderHeight);\n        let loader = new LayoutInfo('loader', 'loader', rect);\n        this.layoutInfos.set('loader', loader);\n        y = loader.rect.maxY;\n      }\n\n      if (this.collection.size === 0 && !this.isLoading) {\n        let rect = new Rect(0, 0, visibleWidth, visibleHeight);\n        let placeholder = new LayoutInfo('placeholder', 'placeholder', rect);\n        this.layoutInfos.set('placeholder', placeholder);\n        y = placeholder.rect.maxY;\n      }\n    }\n    this.contentSize = new Size(visibleWidth, y);\n  }\n}\n\n// https://www8.cs.umu.se/kurser/TDBA77/VT06/algorithms/BOOK/BOOK2/NODE45.HTM\nfunction linearPartition(seq, k) {\n  let n = seq.length;\n  if (k <= 0) {\n    return [];\n  }\n\n  if (k >= n) {\n    return seq.map(x => [x]);\n  }\n\n  if (n === 1) {\n    return [seq];\n  }\n\n  let table = Array(n).fill(0).map(() => Array(k).fill(0));\n  let solution = Array(n - 1).fill(0).map(() => Array(k - 1).fill(0));\n\n  for (let i = 0; i < n; i++) {\n    table[i][0] = seq[i] + (i > 0 ? table[i - 1][0] : 0);\n  }\n\n  for (let i = 0; i < k; i++) {\n    table[0][i] = seq[0];\n  }\n\n  for (let i = 1; i < n; i++) {\n    for (let j = 1; j < k; j++) {\n      let currentMin = 0;\n      let minX = Infinity;\n\n      for (let x = 0; x < i; x++) {\n        let c1 = table[x][j - 1];\n        let c2 = table[i][0] - table[x][0];\n        let cost = Math.max(c1, c2);\n\n        if (!x || cost < currentMin) {\n          currentMin = cost;\n          minX = x;\n        }\n      }\n\n      table[i][j] = currentMin;\n      solution[i - 1][j - 1] = minX;\n    }\n  }\n\n  n = n - 1;\n  k = k - 2;\n\n  let result = [];\n  while (k >= 0) {\n    if (n >= 1) {\n      let row = [];\n      for (let i = solution[n - 1][k] + 1; i < n + 1; i++) {\n        row.push(seq[i]);\n      }\n\n      result.unshift(row);\n      n = solution[n - 1][k];\n    }\n\n    k--;\n  }\n\n  let row = [];\n  for (let i = 0; i < n + 1; i++) {\n    row.push(seq[i]);\n  }\n\n  result.unshift(row);\n\n  return result;\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction, KeyboardDelegate, Node} from '@react-types/shared';\nimport {GridCollection} from '@react-stately/grid';\nimport {InvalidationContext, Layout, LayoutInfo, Rect, Size} from '@react-stately/virtualizer';\nimport {Key} from 'react';\nimport {Scale} from '@react-types/provider';\n\nexport interface BaseLayoutOptions {\n  collator?: Intl.Collator,\n  // TODO: is this valid or is scale a spectrum specific thing that should be left out of the layouts?\n  scale?: Scale,\n  /**\n   * The margin around the grid view between the edges and the items.\n   * @default 24\n   */\n  margin?: number\n}\n\nexport class BaseLayout<T> extends Layout<Node<T>> implements KeyboardDelegate {\n  protected contentSize: Size;\n  protected layoutInfos: Map<Key, LayoutInfo>;\n  protected collator: Intl.Collator;\n  protected lastCollection: GridCollection<T>;\n  collection:  GridCollection<T>;\n  isLoading: boolean;\n  disabledKeys: Set<Key> = new Set();\n  direction: Direction;\n  scale: Scale;\n  margin: number;\n\n  constructor(options: BaseLayoutOptions = {}) {\n    super();\n    this.layoutInfos = new Map();\n    this.collator = options.collator;\n    this.lastCollection = null;\n    this.scale = options.scale || 'medium';\n    this.margin = options.margin || 24;\n  }\n\n  validate(invalidationContext: InvalidationContext<Node<T>, unknown>) {\n    this.collection = this.virtualizer.collection as GridCollection<T>;\n    this.buildCollection(invalidationContext);\n\n    // Remove layout info that doesn't exist in new collection\n    if (this.lastCollection) {\n      for (let key of this.lastCollection.getKeys()) {\n        if (!this.collection.getItem(key)) {\n          this.layoutInfos.delete(key);\n        }\n      }\n\n      if (!this.isLoading) {\n        this.layoutInfos.delete('loader');\n      }\n\n      if (this.collection.size > 0) {\n        this.layoutInfos.delete('placeholder');\n      }\n    }\n\n    this.lastCollection = this.collection;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  buildCollection(invalidationContext?: InvalidationContext<Node<T>, unknown>) {}\n\n  getContentSize() {\n    return this.contentSize;\n  }\n\n  getLayoutInfo(key: Key) {\n    return this.layoutInfos.get(key);\n  }\n\n  getVisibleLayoutInfos(rect) {\n    let res: LayoutInfo[] = [];\n\n    for (let layoutInfo of this.layoutInfos.values()) {\n      if (this.isVisible(layoutInfo, rect)) {\n        res.push(layoutInfo);\n      }\n    }\n\n    return res;\n  }\n\n  isVisible(layoutInfo: LayoutInfo, rect: Rect) {\n    return layoutInfo.rect.intersects(rect);\n  }\n\n  getInitialLayoutInfo(layoutInfo: LayoutInfo) {\n    layoutInfo.opacity = 0;\n    layoutInfo.transform = 'scale3d(0.8, 0.8, 0.8)';\n    return layoutInfo;\n  }\n\n  getFinalLayoutInfo(layoutInfo: LayoutInfo) {\n    layoutInfo.opacity = 0;\n    layoutInfo.transform = 'scale3d(0.8, 0.8, 0.8)';\n    return layoutInfo;\n  }\n\n  _findClosestLayoutInfo(target: Rect, rect: Rect) {\n    let layoutInfos = this.getVisibleLayoutInfos(rect);\n    let best = null;\n    let bestDistance = Infinity;\n\n    // Calculates distance as the distance between the center of 2 rects.\n    for (let cur of layoutInfos) {\n      if (cur.type === 'item') {\n        let curRect = cur.rect;\n        let targetMidX = (target.x + target.maxX) / 2;\n        let targetMidY = (target.y + target.maxY) / 2;\n        let curMidX = (curRect.x + curRect.maxX) / 2;\n        let curMidY = (curRect.y + curRect.maxY) / 2;\n        let dist = Math.pow(targetMidX - curMidX, 2) + Math.pow(targetMidY - curMidY, 2);\n        if (dist < bestDistance) {\n          best = cur;\n          bestDistance = dist;\n        }\n      }\n    }\n\n    return best;\n  }\n\n  _findClosest(target: Rect, rect: Rect) {\n    let best = this._findClosestLayoutInfo(target, rect);\n    return best || null;\n  }\n\n  getKeyBelow(key: Key) {\n    // Expected key is the currently focused cell so we need the parent row key\n    let parentRowKey = this.collection.getItem(key).parentKey;\n    let layoutInfo = this.getLayoutInfo(parentRowKey);\n    let rect = new Rect(layoutInfo.rect.x, layoutInfo.rect.maxY + 1, layoutInfo.rect.width, this.virtualizer.visibleRect.height);\n    let closestRow = this.collection.getItem(this._findClosest(layoutInfo.rect, rect)?.key);\n    return closestRow?.childNodes[0]?.key;\n  }\n\n  getKeyAbove(key: Key) {\n    // Expected key is the currently focused cell so we need the parent row key\n    let parentRowKey = this.collection.getItem(key).parentKey;\n    let layoutInfo = this.getLayoutInfo(parentRowKey);\n    let rect = new Rect(layoutInfo.rect.x, 0, layoutInfo.rect.width, layoutInfo.rect.y - 1);\n    let closestRow = this.collection.getItem(this._findClosest(layoutInfo.rect, rect)?.key);\n    return closestRow?.childNodes[0]?.key;\n  }\n\n  getKeyRightOf(key: Key) {\n    // Expected key is the currently focused cell so we need the parent row key\n    let parentRowKey = this.collection.getItem(key).parentKey;\n    key = this.direction === 'rtl' ?  this.collection.getKeyBefore(parentRowKey) : this.collection.getKeyAfter(parentRowKey);\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      // Don't check if item is disabled because we want to be able to focus disabled items in a grid (double check this)\n      if (item.type === 'item') {\n        return item.childNodes[0].key;\n      }\n      key = this.direction === 'rtl' ?  this.collection.getKeyBefore(key) : this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyLeftOf(key: Key) {\n    // Expected key is the currently focused cell so we need the parent row key\n    let parentRowKey = this.collection.getItem(key).parentKey;\n    key = this.direction === 'rtl' ?  this.collection.getKeyAfter(parentRowKey) : this.collection.getKeyBefore(parentRowKey);\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      // Don't check if item is disabled because we want to be able to focus disabled items in a grid (double check this)\n      if (item.type === 'item') {\n        return item.childNodes[0].key;\n      }\n\n      key = this.direction === 'rtl' ?  this.collection.getKeyAfter(key) : this.collection.getKeyBefore(key);\n    }\n  }\n\n  getFirstKey() {\n    let firstRow = this.collection.getItem(this.collection.getFirstKey());\n    return firstRow.childNodes[0].key;\n  }\n\n  getLastKey() {\n    let lastRow = this.collection.getItem(this.collection.getLastKey());\n    return lastRow.childNodes[0].key;\n  }\n\n  // TODO: pretty unwieldy because it needs to bounce back and forth between the parent key and the child key\n  // Perhaps have layoutInfo store childKey as well so we don't need to do this? Or maybe make the layoutInfos be the cells instead of the rows?\n  getKeyPageAbove(key: Key) {\n    // Expected key is the currently focused cell so we need the parent row key\n    let parentRowKey = this.collection.getItem(key).parentKey;\n    let layoutInfo = this.getLayoutInfo(parentRowKey);\n\n    if (layoutInfo) {\n      let pageY = Math.max(0, layoutInfo.rect.y + layoutInfo.rect.height - this.virtualizer.visibleRect.height);\n      // If the node is so large that it spans multiple page heights, return the key of the item immediately above\n      // Otherwise keep going up until we exceed a single page height worth of nodes\n      let keyAbove = this.collection.getItem(this.getKeyAbove(key))?.parentKey;\n      layoutInfo = this.getLayoutInfo(keyAbove);\n\n      if (layoutInfo && layoutInfo.rect.y > pageY) {\n        while (layoutInfo && layoutInfo.rect.y > pageY) {\n          let childKey = this.collection.getItem(layoutInfo.key).childNodes[0].key;\n          let keyAbove = this.collection.getItem(this.getKeyAbove(childKey))?.parentKey;\n          layoutInfo = this.getLayoutInfo(keyAbove);\n        }\n      }\n\n      if (layoutInfo) {\n        let childKey = this.collection.getItem(layoutInfo.key).childNodes[0].key;\n        return childKey;\n      }\n    }\n\n    return this.getFirstKey();\n  }\n\n  // TODO: pretty unwieldy because it needs to bounce back and forth between the parent key and the child key\n  // Perhaps have layoutInfo store childKey as well so we don't need to do this?\n  getKeyPageBelow(key: Key) {\n    // Expected key is the currently focused cell so we need the parent row key\n    let parentRowKey = this.collection.getItem(key).parentKey;\n    let layoutInfo = this.getLayoutInfo(parentRowKey);\n    if (layoutInfo) {\n      let pageY = Math.min(this.virtualizer.contentSize.height, layoutInfo.rect.y - layoutInfo.rect.height + this.virtualizer.visibleRect.height);\n      // If the node is so large that it spans multiple page heights, return the key of the item immediately below\n      // Otherwise keep going up until we exceed a single page height worth of nodes\n      let keyBelow =  this.collection.getItem(this.getKeyBelow(key))?.parentKey;\n      layoutInfo = this.getLayoutInfo(keyBelow);\n      if (layoutInfo && layoutInfo.rect.y < pageY) {\n        while (layoutInfo && layoutInfo.rect.y < pageY) {\n          let childKey = this.collection.getItem(layoutInfo.key).childNodes[0].key;\n          let keyBelow = this.collection.getItem(this.getKeyBelow(childKey))?.parentKey;\n          layoutInfo = this.getLayoutInfo(keyBelow);\n        }\n      }\n\n      if (layoutInfo) {\n        let childKey = this.collection.getItem(layoutInfo.key).childNodes[0].key;\n        return childKey;\n      }\n    }\n\n    return this.getLastKey();\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n\n    let startItem = collection.getItem(key);\n    key = startItem.parentKey;\n\n    while (key != null) {\n      let item = collection.getItem(key);\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n        if (this.collator.compare(substring, search) === 0) {\n          return [...item.childNodes][0].key;\n        }\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n\n    return null;\n  }\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseLayout, BaseLayoutOptions} from './BaseLayout';\nimport {Key} from 'react';\nimport {LayoutInfo, Rect, Size} from '@react-stately/virtualizer';\nimport {Node, Orientation} from '@react-types/shared';\n\nexport interface GridLayoutOptions extends BaseLayoutOptions {\n  // /**\n  //  * The card size in the grid.\n  //  */\n  // cardSize?: 'S' | 'M' | 'L',\n  /**\n   * The minimum item size.\n   * @default 208 x 208 for horizontal card orientation. 102 x 102 for vertical card orientation.\n   */\n  minItemSize?: Size,\n  /**\n   * The maximum item size.\n   * @default Infinity\n   */\n  maxItemSize?: Size,\n  /**\n   * The minimum space required between items.\n   * @default 18 x 18\n   */\n  minSpace?: Size,\n  /**\n   * The maximum number of columns.\n   * @default Infinity\n   */\n  maxColumns?: number,\n  /**\n   * The additional padding along the card's main axis. Affects the sizing of the content area following the card image.\n   * @default 95\n   */\n  itemPadding?: number,\n  /**\n   * The orientation of the cards withn the grid.\n   * @default vertical\n   */\n  cardOrientation?: Orientation\n}\n\nconst DEFAULT_OPTIONS = {\n  S: {\n    itemPadding: 20,\n    minItemSize: {\n      'vertical': new Size(96, 96)\n    },\n    maxItemSize: new Size(Infinity, Infinity),\n    margin: 8,\n    minSpace: new Size(6, 6),\n    maxColumns: Infinity,\n    dropSpacing: 50\n  },\n  L: {\n    itemPadding: {\n      'vertical': {\n        'medium': 78,\n        'large': 98\n      },\n      'horizontal': {\n        'medium': 150,\n        'large': 170\n      }\n    },\n    minItemSize: {\n      'vertical': new Size(208, 208),\n      'horizontal': new Size(102, 102)\n    },\n    maxItemSize: new Size(Infinity, Infinity),\n    margin: 24,\n    minSpace: new Size(18, 18),\n    maxColumns: Infinity,\n    dropSpacing: 100\n  }\n};\n\nexport class GridLayout<T> extends BaseLayout<T> {\n  protected minItemSize: Size;\n  protected maxItemSize: Size;\n  protected minSpace: Size;\n  protected maxColumns: number;\n  itemPadding: number;\n  cardOrientation: Orientation;\n  protected itemSize: Size;\n  protected numColumns: number;\n  protected numRows: number;\n  protected horizontalSpacing: number;\n\n  constructor(options: GridLayoutOptions = {}) {\n    super(options);\n    let cardSize = 'L';\n    this.cardOrientation = options.cardOrientation || 'vertical';\n    this.minItemSize = options.minItemSize || DEFAULT_OPTIONS[cardSize].minItemSize[this.cardOrientation];\n    this.maxItemSize = options.maxItemSize || DEFAULT_OPTIONS[cardSize].maxItemSize;\n    this.margin = options.margin != null ? options.margin : DEFAULT_OPTIONS[cardSize].margin;\n    this.minSpace = options.minSpace || DEFAULT_OPTIONS[cardSize].minSpace;\n    this.maxColumns = options.maxColumns || DEFAULT_OPTIONS[cardSize].maxColumns;\n    this.itemPadding = options.itemPadding != null ? options.itemPadding : DEFAULT_OPTIONS[cardSize].itemPadding[this.cardOrientation][this.scale];\n    this.itemSize = null;\n    this.numColumns = 0;\n    this.numRows = 0;\n    this.horizontalSpacing = 0;\n  }\n\n  get layoutType() {\n    return 'grid';\n  }\n\n  getIndexAtPoint(x, y, allowInsertingAtEnd = false) {\n    let itemHeight = this.itemSize.height + this.minSpace.height;\n    let itemWidth = this.itemSize.width + this.horizontalSpacing;\n    return Math.max(0,\n      Math.min(\n        this.collection.size - (allowInsertingAtEnd ? 0 : 1),\n        Math.floor(y / itemHeight) * this.numColumns + Math.floor((x - this.horizontalSpacing) / itemWidth)\n      )\n    );\n  }\n\n  getVisibleLayoutInfos(rect) {\n    let res: LayoutInfo[] = [];\n    let numItems = this.collection.size;\n    if (numItems <= 0 || !this.itemSize) {\n      // If there aren't any items in the collection, we are in a loader/placeholder state. Return those layoutInfos as\n      // the currently visible items\n      if (this.layoutInfos.size > 0) {\n        for (let layoutInfo of this.layoutInfos.values()) {\n          if (this.isVisible(layoutInfo, rect)) {\n            res.push(layoutInfo);\n          }\n        }\n      }\n    } else {\n      // The approach from v2 uses indexes where other v3 layouts iterate through every node/root node. This feels more efficient\n      let firstVisibleItem = this.getIndexAtPoint(rect.x, rect.y);\n      let lastVisibleItem = this.getIndexAtPoint(rect.maxX, rect.maxY);\n      for (let index = firstVisibleItem; index <= lastVisibleItem; index++) {\n        let keyFromIndex = this.collection.rows[index].key;\n        let layoutInfo = this.layoutInfos.get(keyFromIndex);\n        if (layoutInfo && this.isVisible(layoutInfo, rect)) {\n          res.push(layoutInfo);\n        }\n      }\n\n      // Check if loader is in view and add to res if so\n      let loader = this.layoutInfos.get('loader');\n      if (loader && this.isVisible(loader, rect)) {\n        res.push(loader);\n      }\n    }\n\n    return res;\n  }\n\n  buildCollection() {\n    let visibleWidth = this.virtualizer.visibleRect.width;\n    let visibleHeight = this.virtualizer.visibleRect.height;\n    let horizontalItemPadding = this.cardOrientation === 'horizontal' ? this.itemPadding : 0;\n    let verticalItemPadding = this.cardOrientation === 'vertical' ? this.itemPadding : 0;\n    let minCardWidth = this.minItemSize.width + horizontalItemPadding;\n\n    // Compute the number of rows and columns needed to display the content\n    let availableWidth = visibleWidth - this.margin * 2;\n    let columns = Math.floor((availableWidth + this.minSpace.width) / (minCardWidth + this.minSpace.width));\n    this.numColumns = Math.max(1, Math.min(this.maxColumns, columns));\n    this.numRows = Math.ceil(this.collection.size / this.numColumns);\n\n    // Compute the available width (minus the space between items)\n    let width = availableWidth - (this.minSpace.width * Math.max(0, this.numColumns - 1));\n\n    // Compute the item width based on the space available\n    let itemWidth = Math.floor(width / this.numColumns);\n    itemWidth = Math.max(minCardWidth, Math.min(this.maxItemSize.width, itemWidth));\n    // Compute the item height, which is proportional to the item width\n    let t = ((itemWidth - minCardWidth) / minCardWidth);\n    let itemHeight = Math.floor(this.minItemSize.height + this.minItemSize.height * t);\n    itemHeight = Math.max(this.minItemSize.height, Math.min(this.maxItemSize.height, itemHeight)) + verticalItemPadding;\n    this.itemSize = new Size(itemWidth, itemHeight);\n\n    // Compute the horizontal spacing and content height\n    this.horizontalSpacing = this.numColumns < 2 ? 0 : Math.floor((availableWidth - this.numColumns * this.itemSize.width) / (this.numColumns - 1));\n\n    let y = this.margin;\n    let index = 0;\n    for (let node of this.collection) {\n      let layoutInfo = this.buildChild(node, y, index);\n      y = layoutInfo.rect.maxY;\n      index++;\n    }\n\n    if (this.isLoading) {\n      let loaderY = y;\n      let loaderHeight = 60;\n      // If there aren't any items, make loader take all avaliable room and remove margin from y calculation\n      // so it doesn't scroll\n      if (this.collection.size === 0) {\n        loaderY = 0;\n        loaderHeight = visibleHeight || 60;\n      }\n\n      let rect = new Rect(0, loaderY, visibleWidth, loaderHeight);\n      let loader = new LayoutInfo('loader', 'loader', rect);\n      this.layoutInfos.set('loader', loader);\n      y = loader.rect.maxY;\n    }\n\n    if (this.collection.size === 0 && !this.isLoading) {\n      let rect = new Rect(0, 0, visibleWidth, visibleHeight);\n      let placeholder = new LayoutInfo('placeholder', 'placeholder', rect);\n      this.layoutInfos.set('placeholder', placeholder);\n      y = placeholder.rect.maxY;\n    }\n\n    this.contentSize = new Size(visibleWidth, y);\n  }\n\n  buildChild(node: Node<T>, y: number, index: number): LayoutInfo {\n    let row = Math.floor(index / this.numColumns);\n    let column = index % this.numColumns;\n    let x = this.margin + column * (this.itemSize.width + this.horizontalSpacing);\n    y = this.margin + row * (this.itemSize.height + this.minSpace.height);\n\n    let rect = new Rect(x, y, this.itemSize.width, this.itemSize.height);\n    // TODO: Perhaps have it so that the child key for each row is stored with the layoutInfo?\n    let layoutInfo = new LayoutInfo(node.type, node.key, rect);\n    layoutInfo.allowOverflow = true;\n    this.layoutInfos.set(node.key, layoutInfo);\n    return layoutInfo;\n  }\n\n  // Since the collection doesn't represent the visual layout, need to calculate what row and column the current key is in,\n  // then return the key that occupies the row + column below. This can be done by figuring out how many cards exist per column then dividing the\n  // collection contents by that number (which will give us the row distribution)\n  getKeyBelow(key: Key) {\n    // Expected key is the currently focused cell so we need the parent row key\n    let parentRowKey = this.collection.getItem(key).parentKey;\n    let indexRowBelow;\n    let index = this.collection.rows.findIndex(card => card.key === parentRowKey);\n    if (index !== -1) {\n      indexRowBelow = index + this.numColumns;\n    } else {\n      return null;\n    }\n\n    return this.collection.rows[indexRowBelow]?.childNodes[0].key || null;\n  }\n\n  getKeyAbove(key: Key) {\n    // Expected key is the currently focused cell so we need the parent row key\n    let parentRowKey = this.collection.getItem(key).parentKey;\n    let indexRowAbove;\n    let index = this.collection.rows.findIndex(card => card.key === parentRowKey);\n    if (index !== -1) {\n      indexRowAbove = index - this.numColumns;\n    } else {\n      return null;\n    }\n\n    return this.collection.rows[indexRowAbove]?.childNodes[0].key || null;\n  }\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseLayout, BaseLayoutOptions} from './BaseLayout';\nimport {InvalidationContext, LayoutInfo, Rect, Size} from '@react-stately/virtualizer';\nimport {Key} from 'react';\nimport {KeyboardDelegate, Node} from '@react-types/shared';\n\nexport interface WaterfallLayoutOptions extends BaseLayoutOptions {\n  /**\n   * The minimum item size.\n   * @default 240 x 136\n   */\n  minItemSize?: Size,\n  /**\n   * The maximum item size.\n   * @default Infinity\n   */\n  maxItemSize?: Size,\n  /**\n   * The minimum space required between items.\n   * @default 18 x 18\n   */\n  minSpace?: Size,\n  /**\n   * The maximum number of columns.\n   * @default Infinity\n   */\n  maxColumns?: number\n}\n\n// TODO: this didn't have any options that varied with card size, should it have?\nexport class WaterfallLayout<T> extends BaseLayout<T> implements KeyboardDelegate {\n  protected minItemSize: Size;\n  protected maxItemSize: Size;\n  protected minSpace: Size;\n  protected maxColumns: number;\n  protected numColumns: number;\n  protected itemWidth: number;\n  protected horizontalSpacing: number;\n\n  constructor(options: WaterfallLayoutOptions = {}) {\n    // TODO: WaterfallLayout doesn't use card size in v2, but perhaps it should support it? Perhaps it would modify\n    // minItemSize defaults or other things\n    super(options);\n    this.minItemSize = options.minItemSize || new Size(240, 136);\n    this.maxItemSize = options.maxItemSize || new Size(Infinity, Infinity);\n    this.margin = options.margin != null ? options.margin : 24;\n    this.minSpace = options.minSpace || new Size(18, 18);\n    this.maxColumns = options.maxColumns || Infinity;\n\n    this.itemWidth = 0;\n    this.numColumns = 0;\n\n    this.lastCollection = null;\n    this.collator = options.collator;\n  }\n\n  get layoutType() {\n    return 'waterfall';\n  }\n\n  buildCollection(invalidationContext: InvalidationContext<Node<T>, unknown>) {\n    // Compute the number of columns needed to display the content\n    let visibleWidth = this.virtualizer.visibleRect.width;\n    let availableWidth = visibleWidth - this.margin * 2;\n    let columns = Math.floor((availableWidth + this.minSpace.width) / (this.minItemSize.width + this.minSpace.width));\n    this.numColumns = Math.max(1, Math.min(this.maxColumns, columns));\n\n\n    // Compute the available width (minus the space between items)\n    let width = availableWidth - (this.minSpace.width * (this.numColumns - 1));\n\n    // Compute the item width based on the space available\n    let itemWidth = Math.round(width / this.numColumns);\n    itemWidth = Math.max(this.minItemSize.width, Math.min(this.maxItemSize.width, itemWidth));\n    this.itemWidth = itemWidth;\n\n    // Compute the horizontal spacing\n    // if only one column, we cannot divide by zero, so set it to 1\n    let horizontalSpacing = Math.round((availableWidth - this.numColumns * itemWidth) / Math.max(1, this.numColumns - 1));\n    this.horizontalSpacing = horizontalSpacing;\n\n    // Setup an array of column heights\n    let columnHeights = Array(this.numColumns).fill(this.margin);\n    for (let node of this.collection) {\n      let key = node.key;\n      // Compute the height of the item. Use the existing height if available,\n      // otherwise call the delegate to estimate the size.\n      let oldLayoutInfo = this.layoutInfos.get(key);\n      let height;\n      let estimatedSize = true;\n      if (oldLayoutInfo) {\n        height = oldLayoutInfo.rect.height;\n        estimatedSize = invalidationContext.sizeChanged || oldLayoutInfo.estimatedSize;\n      } else if (node.props.width && node.props.height) {\n        let nodeWidth = node.props.width;\n        let nodeHeight = node.props.height;\n        let scaledHeight = Math.round(nodeHeight * ((itemWidth) / nodeWidth));\n        height = Math.max(this.minItemSize.height, Math.min(this.maxItemSize.height, scaledHeight));\n      } else {\n        height = itemWidth;\n      }\n\n      // Figure out which column to place the item in, and compute its position.\n      let column = this.getNextColumnIndex(columnHeights);\n      let x = this.margin + column * (itemWidth + horizontalSpacing);\n      let y = columnHeights[column];\n\n      let rect = new Rect(x, y, itemWidth, height);\n      let layoutInfo = new LayoutInfo(node.type, key, rect);\n      layoutInfo.estimatedSize = estimatedSize;\n      layoutInfo.allowOverflow = true;\n      this.layoutInfos.set(key, layoutInfo);\n\n      // TODO: From v2 figure out this bit, when does this get called and what to replace this.collectionView._transaction with?\n      // Removing it from v2 doesn't seem to do anything?\n      // if (layoutInfo.estimatedSize && !invalidationContext.contentChanged && !this.collectionView._transaction) {\n      //   this.updateItemSize(new IndexPath(section, i));\n      // }\n\n      columnHeights[column] += layoutInfo.rect.height + this.minSpace.height;\n    }\n\n    // Reset all columns to the maximum for the next section\n    let maxHeight = Math.max.apply(Math, columnHeights) - this.minSpace.height + this.margin;\n    columnHeights.fill(maxHeight);\n    let y = columnHeights[0];\n\n    if (this.isLoading) {\n      let loaderY = y;\n      let loaderHeight = 60;\n      // If there aren't any items, make loader take all avaliable room and remove margin from y calculation\n      // so it doesn't scroll\n      if (this.collection.size === 0) {\n        loaderY = 0;\n        loaderHeight = this.virtualizer.visibleRect.height || 60;\n      }\n\n      let rect = new Rect(0, loaderY, this.virtualizer.visibleRect.width, loaderHeight);\n      let loader = new LayoutInfo('loader', 'loader', rect);\n      this.layoutInfos.set('loader', loader);\n      y = loader.rect.maxY;\n    }\n\n    if (this.collection.size === 0 && !this.isLoading) {\n      let rect = new Rect(0, 0, this.virtualizer.visibleRect.width, this.virtualizer.visibleRect.height);\n      let placeholder = new LayoutInfo('placeholder', 'placeholder', rect);\n      this.layoutInfos.set('placeholder', placeholder);\n      y = placeholder.rect.maxY;\n    }\n\n    this.contentSize = new Size(this.virtualizer.visibleRect.width, y);\n  }\n\n  updateItemSize(key: Key, size: Size) {\n    let layoutInfo = this.layoutInfos.get(key);\n    if (!size || !layoutInfo) {\n      return false;\n    }\n\n    if (size.height !== layoutInfo.rect.height) {\n      // TODO: also not sure about copying layout info vs mutating it. Listlayout does the below\n      // but I feel that is because it actually maintained a layoutNode map cache which this doesn't have\n      let newLayoutInfo = layoutInfo.copy();\n      newLayoutInfo.rect.height = size.height;\n      this.layoutInfos.set(key, newLayoutInfo);\n      // TODO: v2 had layoutInfo.estimatedSize = view.estimatedSize || false; but we can't do the same here?\n      layoutInfo.estimatedSize = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  getNextColumnIndex(columnHeights) {\n    let minIndex = 0;\n    for (let i = 0; i < columnHeights.length; i++) {\n      if (columnHeights[i] < columnHeights[minIndex]) {\n        minIndex = i;\n      }\n    }\n\n    return minIndex;\n  }\n\n  getClosestRight(key: Key) {\n    let layoutInfo = this.getLayoutInfo(key);\n    // Refactored from v2. Current strategy is to find the closest card in the adjacent column.\n    // This prevent the issue where it was possible that the closest layoutInfo would be two columns over due to the middle card being exceptionally tall\n    // and thus the top corner to top corner distance was massive.\n\n    // First look for a card to the immediate right of the current card. If we can't find any, look for the nearest card in the entire column to the right of the card\n    let rect = new Rect(layoutInfo.rect.maxX + 1, layoutInfo.rect.y, layoutInfo.rect.width + this.horizontalSpacing, layoutInfo.rect.height);\n    key = this._findClosest(layoutInfo.rect, rect)?.key;\n\n    if (!key) {\n      rect = new Rect(layoutInfo.rect.maxX + 1, 0, layoutInfo.rect.width + this.horizontalSpacing, this.virtualizer.contentSize.height);\n      key = this._findClosest(layoutInfo.rect, rect)?.key;\n    }\n\n    return this.collection.getItem(key)?.childNodes[0]?.key;\n  }\n\n  getClosestLeft(key: Key) {\n    let layoutInfo = this.getLayoutInfo(key);\n     // First look for a card to the immediate left of the current card. If we can't find any, look for the nearest card in the entire column to the left of the card\n    let rect = new Rect(layoutInfo.rect.x - layoutInfo.rect.width - this.horizontalSpacing - 1, layoutInfo.rect.y, layoutInfo.rect.width + this.horizontalSpacing, layoutInfo.rect.height);\n    key = this._findClosest(layoutInfo.rect, rect)?.key;\n\n    if (!key) {\n      rect = new Rect(layoutInfo.rect.x - layoutInfo.rect.width - this.horizontalSpacing - 1, 0, layoutInfo.rect.width + this.horizontalSpacing, this.virtualizer.contentSize.height);\n      key = this._findClosest(layoutInfo.rect, rect)?.key;\n    }\n\n    return this.collection.getItem(key)?.childNodes[0]?.key;\n  }\n\n  getKeyRightOf(key: Key) {\n    // Expected key is the currently focused cell so we need the parent row key\n    let parentRowKey = this.collection.getItem(key).parentKey;\n    return this.direction === 'rtl' ?  this.getClosestLeft(parentRowKey) : this.getClosestRight(parentRowKey);\n  }\n\n  getKeyLeftOf(key: Key) {\n    // Expected key is the currently focused cell so we need the parent row key\n    let parentRowKey = this.collection.getItem(key).parentKey;\n    return this.direction === 'rtl' ?  this.getClosestRight(parentRowKey) : this.getClosestLeft(parentRowKey);\n  }\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CardBase} from './CardBase';\nimport {DOMRef, DOMRefValue, ItemProps} from '@react-types/shared';\nimport {PartialNode} from '@react-stately/collections';\nimport React, {forwardRef, ForwardRefExoticComponent, PropsWithoutRef, RefAttributes} from 'react';\nimport {SpectrumCardProps} from '@react-types/card';\nimport {useCardViewContext} from './CardViewContext';\n\n\nlet Card = forwardRef((props: SpectrumCardProps, ref: DOMRef<HTMLDivElement>) => {\n  let context = useCardViewContext();\n  if (context !== null) {\n    return null;\n  } else {\n    return (\n      <CardBase {...props} ref={ref} />\n    );\n  }\n});\n\n// @ts-ignore\nCard.getCollectionNode = function* getCollectionNode<T>(props: any): Generator<PartialNode<T>> {\n  let {children, textValue} = props;\n\n  yield {\n    type: 'item',\n    props: props,\n    rendered: children,\n    'aria-label': props['aria-label'],\n    hasChildNodes: false,\n    textValue\n  };\n};\n\nlet _Card = Card as ForwardRefExoticComponent<ItemProps<SpectrumCardProps> & PropsWithoutRef<SpectrumCardProps> & RefAttributes<DOMRefValue<HTMLDivElement>>>;\nexport {_Card as Card};\n"],"names":[],"version":3,"file":"main.js.map"}