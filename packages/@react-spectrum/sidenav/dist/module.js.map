{"mappings":"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","sources":["packages/@react-spectrum/sidenav/src/index.ts","packages/@react-spectrum/sidenav/src/SideNav.tsx","packages/@react-spectrum/sidenav/src/SideNavContext.ts","packages/@react-spectrum/sidenav/src/SideNavItem.tsx","packages/@adobe/spectrum-css-temp/components/sidenav/vars.css","packages/@react-spectrum/sidenav/src/SideNavSection.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/// <reference types=\"css-module-types\" />\n\nexport * from './SideNav';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useStyleProps} from '@react-spectrum/utils';\nimport {ListLayout} from '@react-stately/layout';\nimport {Node} from '@react-types/shared';\nimport React, {ReactElement, useMemo, useRef} from 'react';\nimport {ReusableView} from '@react-stately/virtualizer';\nimport {SideNavContext} from './SideNavContext';\nimport {SideNavItem} from './SideNavItem';\nimport {SideNavSection} from './SideNavSection';\nimport {SpectrumSideNavProps} from '@react-types/sidenav';\nimport styles from '@adobe/spectrum-css-temp/components/sidenav/vars.css';\nimport {useCollator} from '@react-aria/i18n';\nimport {useSideNav} from '@react-aria/sidenav';\nimport {useTreeState} from '@react-stately/tree';\nimport {Virtualizer, VirtualizerItem} from '@react-aria/virtualizer';\n\nexport function SideNav<T extends object>(props: SpectrumSideNavProps<T>) {\n  let state = useTreeState(props);\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let layout = useMemo(() => new ListLayout({rowHeight: 40, collator}), [collator]);\n  let ref = useRef();\n  let {navProps, listProps} = useSideNav({...props, layout}, state, ref);\n  let {styleProps} = useStyleProps(props);\n\n  layout.collection = state.collection;\n  layout.disabledKeys = state.disabledKeys;\n\n  // This overrides collection view's renderWrapper to support heirarchy of items in sections.\n  // The header is extracted from the children so it can receive ARIA labeling properties.\n  type View = ReusableView<Node<T>, unknown>;\n  let renderWrapper = (parent: View, reusableView: View, children: View[], renderChildren: (views: View[]) => ReactElement[]) => {\n    if (reusableView.viewType === 'section') {\n      return (\n        <SideNavSection\n          key={reusableView.key}\n          reusableView={reusableView}\n          header={children.find(c => c.viewType === 'header')}>\n          {renderChildren(children.filter(c => c.viewType === 'item'))}\n        </SideNavSection>\n      );\n    }\n\n    return (\n      <VirtualizerItem\n        key={reusableView.key}\n        reusableView={reusableView}\n        parent={parent} />\n    );\n  };\n\n  return (\n    <nav\n      {...navProps}\n      {...styleProps}>\n      <SideNavContext.Provider value={state}>\n        <Virtualizer\n          {...listProps}\n          ref={ref}\n          focusedKey={state.selectionManager.focusedKey}\n          className={classNames(styles, 'spectrum-SideNav')}\n          layout={layout}\n          collection={state.collection}\n          renderWrapper={renderWrapper}>\n          {(type, item) => {\n            if (type === 'item') {\n              return (\n                <SideNavItem item={item} />\n              );\n            }\n          }}\n        </Virtualizer>\n      </SideNavContext.Provider>\n    </nav>\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport {TreeState} from '@react-stately/tree';\n\nexport const SideNavContext = React.createContext<TreeState<unknown>>(null);\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames} from '@react-spectrum/utils';\nimport {FocusRing} from '@react-aria/focus';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {useContext, useRef} from 'react';\nimport {SideNavContext} from './SideNavContext';\nimport {SpectrumSideNavItemProps} from '@react-types/sidenav';\nimport styles from '@adobe/spectrum-css-temp/components/sidenav/vars.css';\nimport {useHover} from '@react-aria/interactions';\nimport {useSideNavItem} from '@react-aria/sidenav';\n\nexport function SideNavItem<T>(props: SpectrumSideNavItemProps<T>) {\n  let ref = useRef<HTMLAnchorElement>();\n  let {\n    key,\n    rendered\n  } = props.item;\n  let state = useContext(SideNavContext);\n  let isSelected = state.selectionManager.isSelected(key);\n  let isDisabled = state.disabledKeys.has(key);\n\n  let className = classNames(\n    styles,\n    'spectrum-SideNav-item',\n    {\n      'is-selected': isSelected,\n      'is-disabled': isDisabled\n    }\n  );\n\n  let {listItemProps, listItemLinkProps} = useSideNavItem(props, state, ref);\n  let {hoverProps, isHovered} = useHover({isDisabled});\n\n  return (\n    <div\n      {...listItemProps}\n      className={className} >\n      <FocusRing focusRingClass={classNames(styles, 'focus-ring')}>\n        <a\n          {...mergeProps(listItemLinkProps, hoverProps)}\n          ref={ref}\n          className={classNames(styles, 'spectrum-SideNav-itemLink', {\n            'is-hovered': isHovered\n          })} >\n          {rendered}\n        </a>\n      </FocusRing>\n    </div>\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames} from '@react-spectrum/utils';\nimport {layoutInfoToStyle, useVirtualizerItem} from '@react-aria/virtualizer';\nimport React, {Fragment, useRef} from 'react';\nimport {SideNavSectionProps} from '@react-types/sidenav';\nimport styles from '@adobe/spectrum-css-temp/components/sidenav/vars.css';\nimport {useListBoxSection} from '@react-aria/listbox';\nimport {useLocale} from '@react-aria/i18n';\n\nexport function SideNavSection<T>(props: SideNavSectionProps<T>) {\n  let {children, reusableView, header} = props;\n  let item = reusableView.content;\n  let {headingProps, groupProps} = useListBoxSection({\n    heading: item.rendered,\n    'aria-label': item['aria-label']\n  });\n\n  let headerRef = useRef();\n  useVirtualizerItem({\n    reusableView: header,\n    ref: headerRef\n  });\n\n  let {direction} = useLocale();\n\n  return (\n    <Fragment>\n      <div role=\"presentation\" ref={headerRef} style={layoutInfoToStyle(header.layoutInfo, direction)}>\n        {item.rendered &&\n          <div\n            {...headingProps}\n            className={\n              classNames(\n                styles,\n                'spectrum-SideNav-heading'\n              )\n            }>\n            {item.rendered}\n          </div>\n        }\n      </div>\n      <div\n        {...groupProps}\n        style={layoutInfoToStyle(reusableView.layoutInfo, direction)}>\n        {children}\n      </div>\n    </Fragment>\n  );\n}\n"],"names":[],"version":3,"file":"module.js.map"}