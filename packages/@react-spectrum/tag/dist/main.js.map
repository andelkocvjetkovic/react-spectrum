{"mappings":"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","sources":["packages/@react-spectrum/tag/src/index.ts","packages/@react-spectrum/tag/src/Tag.tsx","packages/@adobe/spectrum-css-temp/components/tags/vars.css","packages/@react-spectrum/tag/src/TagGroup.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/// <reference types=\"css-module-types\" />\n\nexport * from './Tag';\nexport * from './TagGroup';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport Alert from '@spectrum-icons/workflow/Alert';\nimport {classNames, useStyleProps} from '@react-spectrum/utils';\nimport {ClearButton} from '@react-spectrum/button';\nimport {FocusRing} from '@react-aria/focus';\nimport {mergeProps} from '@react-aria/utils';\nimport React from 'react';\nimport {SpectrumTagProps} from '@react-types/tag';\nimport styles from '@adobe/spectrum-css-temp/components/tags/vars.css';\nimport {useHover} from '@react-aria/interactions';\nimport {useTag} from '@react-aria/tag';\nimport {useTagGroupProvider} from './TagGroup';\n\nexport const Tag = ((props: SpectrumTagProps) => {\n  const {\n    isDisabled,\n    isRemovable,\n    validationState,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let {hoverProps, isHovered} = useHover({isDisabled});\n  const {\n    isDisabled: isGroupDisabled,\n    isRemovable: isGroupRemovable,\n    validationState: groupValidationState,\n    onRemove,\n    role\n  } =  useTagGroupProvider();\n\n  let removable = isGroupRemovable !== undefined ? isGroupRemovable : isRemovable;\n  let disabled = isGroupDisabled !== undefined ? isGroupDisabled : isDisabled;\n  let isInvalid = (validationState !== undefined ? validationState : groupValidationState) === 'invalid';\n  let {clearButtonProps, labelProps, tagProps} = useTag({\n    ...props,\n    isRemovable: removable,\n    isDisabled: disabled,\n    validationState: validationState !== undefined ? validationState : groupValidationState,\n    onRemove: props.onRemove || onRemove,\n    role\n  });\n  let {role: buttonRole, ...otherButtonProps} = clearButtonProps;\n  let icon = props.icon || (isInvalid && <Alert />);\n\n  return (\n    <FocusRing focusRingClass={classNames(styles, 'focus-ring')}>\n      <div\n        {...styleProps}\n        {...mergeProps(tagProps, hoverProps)}\n        className={classNames(\n          styles,\n          'spectrum-Tags-item',\n          {\n            'is-disabled': disabled,\n            // 'is-selected': isSelected,\n            'spectrum-Tags-item--removable': removable,\n            'is-invalid': isInvalid,\n            'is-hovered': isHovered\n          },\n          styleProps.className\n        )}>\n        {icon && React.cloneElement(icon, {size: 'S', UNSAFE_className: classNames(styles, 'spectrum-Tags-itemIcon')})}\n        <span\n          {...labelProps}\n          className={classNames(styles, 'spectrum-Tags-itemLabel')}>\n          {props.children}\n        </span>\n        {removable &&\n          <span role={buttonRole}>\n            <ClearButton\n              tabIndex={tagProps.tabIndex}\n              focusClassName={classNames(styles, 'is-focused')}\n              UNSAFE_className={classNames(styles, 'spectrum-Tags-itemClearButton')}\n              {...otherButtonProps} />\n          </span>\n        }\n      </div>\n    </FocusRing>\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useStyleProps} from '@react-spectrum/utils';\nimport React, {useContext} from 'react';\nimport {Removable} from '@react-types/shared';\nimport {SpectrumTagGroupProps} from '@react-types/tag';\nimport styles from '@adobe/spectrum-css-temp/components/tags/vars.css';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useTagGroup} from '@react-aria/tag';\n\ninterface TagGroupContextValue extends Removable<any, void> {\n  isDisabled?: boolean,\n  isFocused?: boolean,\n  isRequired?: boolean,\n  isReadOnly?: boolean,\n  validationState?: 'valid' | 'invalid',\n  role?: 'gridcell'\n}\n\nconst TagGroupContext = React.createContext<TagGroupContextValue | {}>({});\n\nexport function useTagGroupProvider(): TagGroupContextValue {\n  return useContext(TagGroupContext);\n}\n\nexport const TagGroup = ((props: SpectrumTagGroupProps) => {\n  props = useProviderProps(props);\n\n  let {\n    isReadOnly,\n    isDisabled,\n    onRemove,\n    validationState,\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  const {tagGroupProps} = useTagGroup(props);\n\n  function removeAll(tags) {\n    onRemove([tags]);\n  }\n\n  return (\n    <div\n      {...styleProps}\n      className={\n        classNames(\n          styles,\n          'spectrum-Tags',\n          {\n            'is-disabled': isDisabled\n          },\n          styleProps.className\n        )\n      }\n      {...tagGroupProps}>\n      <TagGroupContext.Provider\n        value={{\n          isRemovable: isReadOnly ? false : isReadOnly,\n          isDisabled,\n          onRemove: isReadOnly ? null : removeAll,\n          validationState,\n          role: 'gridcell'\n        }}>\n        {children}\n      </TagGroupContext.Provider>\n    </div>\n  );\n});\n"],"names":[],"version":3,"file":"main.js.map"}